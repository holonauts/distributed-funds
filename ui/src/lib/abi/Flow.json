{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "flowMinOutputs",
          "type": "uint256"
        }
      ],
      "name": "BadMinStackLength",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InitializeSignatureFn",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "InsufficientFlowOutputs",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "i",
          "type": "uint256"
        }
      ],
      "name": "InvalidSignature",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "Sentinel",
          "name": "sentinel",
          "type": "uint256"
        }
      ],
      "name": "MissingSentinel",
      "type": "error"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "unregisteredHash",
          "type": "bytes32"
        }
      ],
      "name": "UnregisteredFlow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnsupportedERC1155Flow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnsupportedERC20Flow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnsupportedERC721Flow",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "UnsupportedFlowInputs",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256[][]",
          "name": "context",
          "type": "uint256[][]"
        }
      ],
      "name": "Context",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IInterpreterV2",
              "name": "interpreter",
              "type": "address"
            },
            {
              "internalType": "contract IInterpreterStoreV2",
              "name": "store",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "expression",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct EvaluableV2",
          "name": "evaluable",
          "type": "tuple"
        }
      ],
      "name": "FlowInitialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IExpressionDeployerV3",
              "name": "deployer",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "bytecode",
              "type": "bytes"
            },
            {
              "internalType": "uint256[]",
              "name": "constants",
              "type": "uint256[]"
            }
          ],
          "indexed": false,
          "internalType": "struct EvaluableConfigV3[]",
          "name": "config",
          "type": "tuple[]"
        }
      ],
      "name": "Initialize",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IInterpreterV2",
              "name": "interpreter",
              "type": "address"
            },
            {
              "internalType": "contract IInterpreterStoreV2",
              "name": "store",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "expression",
              "type": "address"
            }
          ],
          "internalType": "struct EvaluableV2",
          "name": "evaluable",
          "type": "tuple"
        },
        {
          "internalType": "uint256[]",
          "name": "callerContext",
          "type": "uint256[]"
        },
        {
          "components": [
            {
              "internalType": "address",
              "name": "signer",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "context",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "internalType": "struct SignedContextV1[]",
          "name": "signedContexts",
          "type": "tuple[]"
        }
      ],
      "name": "flow",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ERC20Transfer[]",
              "name": "erc20",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ERC721Transfer[]",
              "name": "erc721",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ERC1155Transfer[]",
              "name": "erc1155",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct FlowTransferV1",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IExpressionDeployerV3",
              "name": "deployer",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "bytecode",
              "type": "bytes"
            },
            {
              "internalType": "uint256[]",
              "name": "constants",
              "type": "uint256[]"
            }
          ],
          "internalType": "struct EvaluableConfigV3[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "initialize",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes[]",
          "name": "data",
          "type": "bytes[]"
        }
      ],
      "name": "multicall",
      "outputs": [
        {
          "internalType": "bytes[]",
          "name": "results",
          "type": "bytes[]"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155BatchReceived",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC1155Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "onERC721Received",
      "outputs": [
        {
          "internalType": "bytes4",
          "name": "",
          "type": "bytes4"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "stack",
          "type": "uint256[]"
        }
      ],
      "name": "stackToFlow",
      "outputs": [
        {
          "components": [
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ERC20Transfer[]",
              "name": "erc20",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ERC721Transfer[]",
              "name": "erc721",
              "type": "tuple[]"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "token",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "id",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "internalType": "struct ERC1155Transfer[]",
              "name": "erc1155",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct FlowTransferV1",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506200001c62000022565b620000e3565b600054610100900460ff16156200008f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff90811614620000e1576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b61306f80620000f36000396000f3fe608060405234801561001057600080fd5b50600436106100a35760003560e01c806343b84e5311610076578063bc197c811161005b578063bc197c811461018a578063f23a6e61146101c2578063f83d765a146101fa57600080fd5b806343b84e531461014a578063ac9650d81461016a57600080fd5b806301ffc9a7146100a8578063150b7a02146100d0578063204368cc14610114578063439fab9114610129575b600080fd5b6100bb6100b6366004612099565b61020d565b60405190151581526020015b60405180910390f35b6100e36100de366004612243565b6102a6565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020016100c7565b610127610122366004612339565b6102d0565b005b61013c610137366004612476565b610302565b6040519081526020016100c7565b61015d6101583660046124e8565b61050e565b6040516100c7919061259f565b61017d6101783660046126fd565b610548565b6040516100c791906127ce565b6100e361019836600461284e565b7fbc197c810000000000000000000000000000000000000000000000000000000095945050505050565b6100e36101d03660046128fc565b7ff23a6e610000000000000000000000000000000000000000000000000000000095945050505050565b61015d610208366004612965565b610636565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e00000000000000000000000000000000000000000000000000000000014806102a057507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff000000000000000000000000000000000000000000000000000000008316145b92915050565b7f150b7a02000000000000000000000000000000000000000000000000000000005b949350505050565b6040517faf1fbb2100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60008054610100900460ff16158080156103235750600054600160ff909116105b8061033d5750303b15801561033d575060005460ff166001145b6103ce576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084015b60405180910390fd5b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001179055801561042c57600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff166101001790555b600061043a84860186612339565b90507f484bca5e4998b7b55ce2c5bc489085d787e96b533bade3f61c348e0c5d4acefe338260405161046d929190612b4b565b60405180910390a16104808160036106ab565b7fe0e57eda3f08f2a93bbe980d3df7f9c315eac41181f58b865a13d917fe769fc3925050801561050757600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b5092915050565b61053260405180606001604052806060815260200160608152602001606081525090565b6102a06020830183516020908102850101610a5d565b60608167ffffffffffffffff81111561056357610563612100565b60405190808252806020026020018201604052801561059657816020015b60608152602001906001900390816105815790505b50905060005b8281101561050757610606308585848181106105ba576105ba612c19565b90506020028101906105cc9190612c48565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610be492505050565b82828151811061061857610618612c19565b6020026020010181905250808061062e90612cad565b91505061059c565b61065a60405180606001604052806060815260200160608152602001606081525090565b610662610c09565b6000806000610672878787610c7c565b92509250925060006106848484610a5d565b905061069581896020015184610e50565b93505050506106a4600160fb55565b9392505050565b600054610100900460ff16610742576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016103c5565b61074a610f06565b610752610f06565b61075a610f06565b610762610f9f565b60038110156107a0576040517fb0682cf3000000000000000000000000000000000000000000000000000000008152600481018290526024016103c5565b6107da6040518060600160405280600073ffffffffffffffffffffffffffffffffffffffff16815260200160608152602001606081525090565b60408051606081018252600080825260208201819052918101829052905b8451811015610a565784818151811061081357610813612c19565b60200260200101519250600080600080866000015173ffffffffffffffffffffffffffffffffffffffff1663b7f14403886020015189604001516040518363ffffffff1660e01b815260040161086a929190612d0c565b6000604051808303816000875af1158015610889573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108cf9190810190612d3a565b602081015193975091955093509150600081901a9060011a811561091f576040517f8d6add8c00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b89811015610959576040517f20ee0c0300000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b505060405180606001604052808573ffffffffffffffffffffffffffffffffffffffff1681526020018473ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff168152509550600161012d60006109cc896060902090565b81526020808201929092526040908101600020929092558151338152885173ffffffffffffffffffffffffffffffffffffffff9081168284015291890151821681840152918801511660608201527fed510090abe2a95b97a621e3d2c947ea3c26eced1c87470474d17e353dcc53389060800160405180910390a1505050508060010190506107f8565b5050505050565b610a8160405180606001604052806060815260200160608152602001606081525090565b60408051808201909152601281527f5241494e5f464c4f575f53454e54494e454c0000000000000000000000000000602090910152606080806000610ae987877ffea74d0c9bf4a3c28f0dd0674db22a3d7f8bf259c56af19f4ac1e735b156974f600461103e565b60408051808201909152601281527f5241494e5f464c4f575f53454e54494e454c00000000000000000000000000006020909101529096509350839050610b5387877ffea74d0c9bf4a3c28f0dd0674db22a3d7f8bf259c56af19f4ac1e735b156974f600461103e565b60408051808201909152601281527f5241494e5f464c4f575f53454e54494e454c00000000000000000000000000006020909101529096509250829050610bbd87877ffea74d0c9bf4a3c28f0dd0674db22a3d7f8bf259c56af19f4ac1e735b156974f600561103e565b60408051606081018252968752602087019590955293850193909352509195945050505050565b60606106a48383604051806060016040528060278152602001613048602791396110ea565b600260fb5403610c75576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064016103c5565b600260fb55565b60008060606000610ca8610ca28760408051600181526020810192909252818101905290565b8661116f565b90507f17a5c0f3785132a57703932032f6863e7920434150aa1dc940e567b440fdce1f3382604051610cdb929190612e41565b60405180910390a160608720600081815261012d6020526040902054610d30576040517f7a80ba4d000000000000000000000000000000000000000000000000000000008152600481018290526024016103c5565b50600080886000015173ffffffffffffffffffffffffffffffffffffffff16636046c5f98a60200151610d6d30600061149f90919063ffffffff16565b60408d015160201b77ffffffffffffffffffffffffffffffffffffffff000000001661ffff17604080516000808252602082019092528991506040518663ffffffff1660e01b8152600401610dc6959493929190612e70565b600060405180830381865afa158015610de3573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052610e299190810190612f18565b91509150610e378260200190565b8251909a60209182029093010198509650945050505050565b805115610edf576040517f946aadc600000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169063946aadc690610eac906000908590600401612f7c565b600060405180830381600087803b158015610ec657600080fd5b505af1158015610eda573d6000803e3d6000fd5b505050505b610ee8836114ae565b610ef183611607565b610efa83611797565b505050565b600160fb55565b600054610100900460ff16610f9d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016103c5565b565b600054610100900460ff16611036576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016103c5565b610f9d611947565b60008060208302855b8781111561106b57602081038681510361106257935061106b565b50819003611047565b50826000036110a9576040517fd457746f000000000000000000000000000000000000000000000000000000008152600481018690526024016103c5565b604051915060208201602084015b878110156110cf5780825260209091019082016110b7565b50806040526001602084830304038352505094509492505050565b60606000808573ffffffffffffffffffffffffffffffffffffffff16856040516111149190612f95565b600060405180830381855af49150503d806000811461114f576040519150601f19603f3d011682016040523d82523d6000602084013e611154565b606091505b5091509150611165868383876119de565b9695505050505050565b60606000825167ffffffffffffffff81111561118d5761118d612100565b6040519080825280602002602001820160405280156111b6578160200160208202803683370190505b5090506000808451116111ca5760006111d0565b83516001015b855160010101905060008167ffffffffffffffff8111156111f3576111f3612100565b60405190808252806020026020018201604052801561122657816020015b60608152602001906001900390816112115790505b509050600061124b604080516002815233602082015230818301526060810190915290565b82828151811061125d5761125d612c19565b602002602001018190525060005b87518110156112bb57818060010192505087818151811061128e5761128e612c19565b60200260200101518383815181106112a8576112a8612c19565b602090810291909101015260010161126b565b50855115611495578080600101915050838282815181106112de576112de612c19565b602002602001018190525060005b8651811015611493576113bd87828151811061130a5761130a612c19565b60200260200101516000015161139a6113478a858151811061132e5761132e612c19565b6020026020010151602001518051602090810291012090565b6040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c8101829052600090605c01604051602081830303815290604052805190602001209050919050565b8984815181106113ac576113ac612c19565b602002602001015160400151611a7e565b6113f6576040517f52bf9848000000000000000000000000000000000000000000000000000000008152600481018290526024016103c5565b86818151811061140857611408612c19565b60200260200101516000015173ffffffffffffffffffffffffffffffffffffffff1685828151811061143c5761143c612c19565b602002602001018181525050818060010192505086818151811061146257611462612c19565b60200260200101516020015183838151811061148057611480612c19565b60209081029190910101526001016112ec565b505b5095945050505050565b60009182526020526040902090565b6040805160808101825260008082526020820181905291810182905260608101829052905b825151811015610efa5782518051829081106114f1576114f1612c19565b602002602001015191503373ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff1603611568576040820151606083015183516115639273ffffffffffffffffffffffffffffffffffffffff90911691339190611c4b565b6115ff565b3073ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff16036115cd576040820151606083015183516115639273ffffffffffffffffffffffffffffffffffffffff90911691611d2d565b6040517fa521c60f00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6001016114d3565b6040805160808101825260008082526020820181905291810182905260608101829052905b826020015151811015610efa578260200151818151811061164f5761164f612c19565b602002602001015191503373ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff16141580156116b35750602082015173ffffffffffffffffffffffffffffffffffffffff163014155b156116ea576040517f3a5befc500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81516020830151604080850151606086015191517f42842e0e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9384166004820152908316602482015260448101919091529116906342842e0e90606401600060405180830381600087803b15801561177457600080fd5b505af1158015611788573d6000803e3d6000fd5b5050505080600101905061162c565b6040805160a0810182526000808252602082018190529181018290526060810182905260808101829052905b826040015151811015610efa57826040015181815181106117e6576117e6612c19565b602002602001015191503373ffffffffffffffffffffffffffffffffffffffff16826020015173ffffffffffffffffffffffffffffffffffffffff161415801561184a5750602082015173ffffffffffffffffffffffffffffffffffffffff163014155b15611881576040517fc6a91ecc00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b815160208301516040808501516060860151608087015192517ff242432a00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff948516600482015291841660248301526044820152606481019190915260a06084820152600060a482015291169063f242432a9060c401600060405180830381600087803b15801561192357600080fd5b505af1158015611937573d6000803e3d6000fd5b5050600190920191506117c39050565b600054610100900460ff16610eff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016103c5565b60608315611a74578251600003611a6d5773ffffffffffffffffffffffffffffffffffffffff85163b611a6d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016103c5565b50816102c8565b6102c88383611d83565b6000806000611a8d8585611dc7565b90925090506000816004811115611aa657611aa6612fb1565b148015611ade57508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b15611aee576001925050506106a4565b6000808773ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b8888604051602401611b23929190612fe0565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909416939093179092529051611bac9190612f95565b600060405180830381855afa9150503d8060008114611be7576040519150601f19603f3d011682016040523d82523d6000602084013e611bec565b606091505b5091509150818015611bff575080516020145b8015611c3f575080517f1626ba7e0000000000000000000000000000000000000000000000000000000090611c3d9083016020908101908401612ff9565b145b98975050505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052611d279085907f23b872dd00000000000000000000000000000000000000000000000000000000906084015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611e0c565b50505050565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610efa9084907fa9059cbb0000000000000000000000000000000000000000000000000000000090606401611ca5565b815115611d935781518083602001fd5b806040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016103c59190613012565b6000808251604103611dfd5760208301516040840151606085015160001a611df187828585611f18565b94509450505050611e05565b506000905060025b9250929050565b6000611e6e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166120079092919063ffffffff16565b805190915015610efa5780806020019051810190611e8c9190613025565b610efa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016103c5565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a0831115611f4f5750600090506003611ffe565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015611fa3573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff8116611ff757600060019250925050611ffe565b9150600090505b94509492505050565b60606102c88484600085856000808673ffffffffffffffffffffffffffffffffffffffff16858760405161203b9190612f95565b60006040518083038185875af1925050503d8060008114612078576040519150601f19603f3d011682016040523d82523d6000602084013e61207d565b606091505b509150915061208e878383876119de565b979650505050505050565b6000602082840312156120ab57600080fd5b81357fffffffff00000000000000000000000000000000000000000000000000000000811681146106a457600080fd5b73ffffffffffffffffffffffffffffffffffffffff811681146120fd57600080fd5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff8111828210171561215257612152612100565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561219f5761219f612100565b604052919050565b600067ffffffffffffffff8211156121c1576121c1612100565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f8301126121fe57600080fd5b813561221161220c826121a7565b612158565b81815284602083860101111561222657600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561225957600080fd5b8435612264816120db565b93506020850135612274816120db565b925060408501359150606085013567ffffffffffffffff81111561229757600080fd5b6122a3878288016121ed565b91505092959194509250565b600067ffffffffffffffff8211156122c9576122c9612100565b5060051b60200190565b600082601f8301126122e457600080fd5b813560206122f461220c836122af565b82815260059290921b8401810191818101908684111561231357600080fd5b8286015b8481101561232e5780358352918301918301612317565b509695505050505050565b6000602080838503121561234c57600080fd5b823567ffffffffffffffff8082111561236457600080fd5b818501915085601f83011261237857600080fd5b813561238661220c826122af565b81815260059190911b830184019084810190888311156123a557600080fd5b8585015b83811015612469578035858111156123c15760008081fd5b86016060818c037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0018113156123f75760008081fd5b6123ff61212f565b8983013561240c816120db565b8152604083810135898111156124225760008081fd5b6124308f8d838801016121ed565b838d0152509183013591888311156124485760008081fd5b6124568e8c858701016122d3565b90820152855250509186019186016123a9565b5098975050505050505050565b6000806020838503121561248957600080fd5b823567ffffffffffffffff808211156124a157600080fd5b818501915085601f8301126124b557600080fd5b8135818111156124c457600080fd5b8660208285010111156124d657600080fd5b60209290920196919550909350505050565b6000602082840312156124fa57600080fd5b813567ffffffffffffffff81111561251157600080fd5b6102c8848285016122d3565b600081518084526020808501945080840160005b83811015612594578151805173ffffffffffffffffffffffffffffffffffffffff9081168952848201518116858a015260408083015190911690890152606080820151908901526080908101519088015260a09096019590820190600101612531565b509495945050505050565b600060208083526080808401855160608487015281815180845260a0880191508583019350600092505b8083101561262d5761261982855173ffffffffffffffffffffffffffffffffffffffff80825116835280602083015116602084015280604083015116604084015250606081015160608301525050565b9285019260019290920191908401906125c9565b50848801517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0888303810160408a01528151808452918701945092506000918601905b808310156126d4576126c082865173ffffffffffffffffffffffffffffffffffffffff80825116835280602083015116602084015280604083015116604084015250606081015160608301525050565b938601936001929092019190850190612670565b5060408901519550828882030160608901526126f0818761251d565b9998505050505050505050565b6000806020838503121561271057600080fd5b823567ffffffffffffffff8082111561272857600080fd5b818501915085601f83011261273c57600080fd5b81358181111561274b57600080fd5b8660208260051b85010111156124d657600080fd5b60005b8381101561277b578181015183820152602001612763565b50506000910152565b6000815180845261279c816020860160208601612760565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015612841577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845261282f858351612784565b945092850192908501906001016127f5565b5092979650505050505050565b600080600080600060a0868803121561286657600080fd5b8535612871816120db565b94506020860135612881816120db565b9350604086013567ffffffffffffffff8082111561289e57600080fd5b6128aa89838a016122d3565b945060608801359150808211156128c057600080fd5b6128cc89838a016122d3565b935060808801359150808211156128e257600080fd5b506128ef888289016121ed565b9150509295509295909350565b600080600080600060a0868803121561291457600080fd5b853561291f816120db565b9450602086013561292f816120db565b93506040860135925060608601359150608086013567ffffffffffffffff81111561295957600080fd5b6128ef888289016121ed565b600080600083850360a081121561297b57600080fd5b606081121561298957600080fd5b5061299261212f565b843561299d816120db565b81526020858101356129ae816120db565b8282015260408601356129c0816120db565b604083015290935060608501359067ffffffffffffffff808311156129e457600080fd5b6129f0888489016122d3565b94506080870135925080831115612a0657600080fd5b828701925087601f840112612a1a57600080fd5b8235612a2861220c826122af565b81815260059190911b8401830190838101908a831115612a4757600080fd5b8486015b83811015612b0a57803585811115612a635760008081fd5b87016060818e037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0011215612a985760008081fd5b612aa061212f565b87820135612aad816120db565b8152604082013587811115612ac25760008081fd5b612ad08f8a838601016122d3565b8983015250606082013587811115612ae85760008081fd5b612af68f8a838601016121ed565b604083015250845250918501918501612a4b565b508096505050505050509250925092565b600081518084526020808501945080840160005b8381101561259457815187529582019590820190600101612b2f565b6000604080830173ffffffffffffffffffffffffffffffffffffffff808716855260208381870152828751808552606094508488019150848160051b890101838a0160005b83811015612c08577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa08b84030185528151878151168452868101518988860152612bdc8a860182612784565b918b0151858303868d0152919050612bf48183612b1b565b968801969450505090850190600101612b90565b50909b9a5050505050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612c7d57600080fd5b83018035915067ffffffffffffffff821115612c9857600080fd5b602001915036819003821315611e0557600080fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203612d05577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b604081526000612d1f6040830185612784565b8281036020840152612d318185612b1b565b95945050505050565b60008060008060808587031215612d5057600080fd5b8451612d5b816120db565b6020860151909450612d6c816120db565b6040860151909350612d7d816120db565b606086015190925067ffffffffffffffff811115612d9a57600080fd5b8501601f81018713612dab57600080fd5b8051612db961220c826121a7565b818152886020838501011115612dce57600080fd5b612ddf826020830160208601612760565b9598949750929550505050565b600081518084526020808501808196508360051b8101915082860160005b85811015612e34578284038952612e22848351612b1b565b98850198935090840190600101612e0a565b5091979650505050505050565b73ffffffffffffffffffffffffffffffffffffffff831681526040602082015260006102c86040830184612dec565b73ffffffffffffffffffffffffffffffffffffffff8616815284602082015283604082015260a060608201526000612eab60a0830185612dec565b8281036080840152611c3f8185612b1b565b600082601f830112612ece57600080fd5b81516020612ede61220c836122af565b82815260059290921b84018101918181019086841115612efd57600080fd5b8286015b8481101561232e5780518352918301918301612f01565b60008060408385031215612f2b57600080fd5b825167ffffffffffffffff80821115612f4357600080fd5b612f4f86838701612ebd565b93506020850151915080821115612f6557600080fd5b50612f7285828601612ebd565b9150509250929050565b8281526040602082015260006102c86040830184612b1b565b60008251612fa7818460208701612760565b9190910192915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8281526040602082015260006102c86040830184612784565b60006020828403121561300b57600080fd5b5051919050565b6020815260006106a46020830184612784565b60006020828403121561303757600080fd5b815180151581146106a457600080fdfe416464726573733a206c6f772d6c6576656c2064656c65676174652063616c6c206661696c6564",
    "sourceMap": "805:1522:78:-:0;;;;;;;;;;;;-1:-1:-1;6410:22:77;:20;:22::i;:::-;805:1522:78;;5939:280:18;6007:13;;;;;;;6006:14;5998:66;;;;-1:-1:-1;;;5998:66:18;;216:2:106;5998:66:18;;;198:21:106;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:106;;;338:37;392:19;;5998:66:18;;;;;;;;6078:12;;6094:15;6078:12;;;:31;6074:139;;6125:12;:30;;-1:-1:-1;;6125:30:18;6140:15;6125:30;;;;;;6174:28;;564:36:106;;;6174:28:18;;552:2:106;537:18;6174:28:18;;;;;;;6074:139;5939:280::o;422:184:106:-;805:1522:78;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "805:1522:78:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;661:254:25;;;;;;:::i;:::-;;:::i;:::-;;;516:14:106;;509:22;491:41;;479:2;464:18;661:254:25;;;;;;;;849:162:33;;;;;;:::i;:::-;;:::i;:::-;;;3049:66:106;3037:79;;;3019:98;;3007:2;2992:18;849:162:33;2875:248:106;1061:109:78;;;;;;:::i;:::-;;:::i;:::-;;1209:320;;;;;;:::i;:::-;;:::i;:::-;;;6910:25:106;;;6898:2;6883:18;1209:320:78;6764:177:106;1563:192:78;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;695:319:36:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;972:247:24:-;;;;;;:::i;:::-;1176:36;972:247;;;;;;;;747:219;;;;;;:::i;:::-;928:31;747:219;;;;;;;;1789:536:78;;;;;;:::i;:::-;;:::i;661:254:25:-;785:4;808:60;;;823:45;808:60;;:100;;-1:-1:-1;1183:36:38;1168:51;;;;872:36:25;801:107;661:254;-1:-1:-1;;661:254:25:o;849:162:33:-;974:30;849:162;;;;;;;:::o;1061:109:78:-;1140:23;;;;;;;;;;;;;;1209:320;1280:7;3302:13:18;;;;;;;3301:14;;3347:34;;;;-1:-1:-1;3365:12:18;;3380:1;3365:12;;;;:16;3347:34;3346:108;;;-1:-1:-1;3426:4:18;1713:19:34;:23;;;3387:66:18;;-1:-1:-1;3436:12:18;;;;;:17;3387:66;3325:201;;;;;;;17161:2:106;3325:201:18;;;17143:21:106;17200:2;17180:18;;;17173:30;17239:34;17219:18;;;17212:62;17310:16;17290:18;;;17283:44;17344:19;;3325:201:18;;;;;;;;;3536:12;:16;;;;3551:1;3536:16;;;3562:65;;;;3596:13;:20;;;;;;;;3562:65;1299:37:78::1;1339:39;::::0;;::::1;1350:4:::0;1339:39:::1;:::i;:::-;1299:79;;1393:34;1404:10;1416;1393:34;;;;;;;:::i;:::-;;;;;;;;1438:46;1453:10;671:1:94;1438:14:78;:46::i;:::-;191:36:42;1494:28:78;;;3651:14:18::0;3647:99;;;3697:5;3681:21;;;;;;3721:14;;-1:-1:-1;19438:36:106;;3721:14:18;;19426:2:106;19411:18;3721:14:18;;;;;;;3647:99;3269:483;1209:320:78;;;;:::o;1563:192::-;1648:21;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;1648:21:78;1688:60;1316:4:75;1305:16;;1699:12;;1693:4;1689:23;;;1668:46;;;1688:19:78;:60::i;695:319:36:-;763:22;819:4;807:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;797:34;;846:9;841:143;861:15;;;841:143;;;910:63;958:4;965;;970:1;965:7;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;910:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;910:39:36;;-1:-1:-1;;;910:63:36:i;:::-;897:7;905:1;897:10;;;;;;;;:::i;:::-;;;;;;:76;;;;878:3;;;;;:::i;:::-;;;;841:143;;1789:536:78;1977:21;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;1977:21:78;2505::19;:19;:21::i;:::-;2015:19:78::1;2036:16:::0;2054:20:::1;2090:52;2101:9;2112:13;2127:14;2090:10;:52::i;:::-;2014:128;;;;;;2152:34;2189:42;2209:11;2222:8;2189:19;:42::i;:::-;2152:79;;2241:48;2254:12;2268:9;:15;;;2285:3;2241:12;:48::i;:::-;2306:12:::0;-1:-1:-1;;;;2547:20:19;1787:1;3053:7;:22;2873:209;2547:20;1789:536:78;;;;;:::o;6959:3435:77:-;5374:13:18;;;;;;;5366:69;;;;;;;20815:2:106;5366:69:18;;;20797:21:106;20854:2;20834:18;;;20827:30;20893:34;20873:18;;;20866:62;20964:13;20944:18;;;20937:41;20995:19;;5366:69:18;20613:407:106;5366:69:18;7198:21:77::1;:19;:21::i;:::-;7233:22;:20;:22::i;:::-;7269:18;:16;:18::i;:::-;7301:24;:22;:24::i;:::-;671:1:94;7577:14:77;:35;7573:114;;;7639:33;::::0;::::1;::::0;;::::1;::::0;::::1;6910:25:106::0;;;6883:18;;7639:33:77::1;6764:177:106::0;7573:114:77::1;7701:31;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;;7701:31:77::1;-1:-1:-1::0;;;;;;;;;;;;;;;;;;;;;;;;;7930:2448:77::1;7954:16;:23;7950:1;:27;7930:2448;;;8011:16;8028:1;8011:19;;;;;;;;:::i;:::-;;;;;;;8002:28;;8500:26;8528:25:::0;8555:18:::1;8575:15:::0;8614:6:::1;:15;;;:33;;;8648:6;:15;;;8665:6;:16;;;8614:68;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;::::1;;::::0;::::1;::::0;;;::::1;::::0;::::1;:::i;:::-;8883:4;8875:13:::0;::::1;8869:20:::0;8499:183;;-1:-1:-1;8499:183:77;;-1:-1:-1;8499:183:77;-1:-1:-1;8499:183:77;-1:-1:-1;8723:18:77::1;8928:15:::0;;::::1;::::0;8988:1:::1;8983:15;9045::::0;;9041:100:::1;;9095:23;;;;;;;;;;;;;;9041:100;9180:14;9166:11;:28;9162:115;;;9229:25;;;;;;;;;;;;;;9162:115;8701:594;;9325:43;;;;;;;;9337:11;9325:43;;;;;;9350:5;9325:43;;;;;;9357:10;9325:43;;;;::::0;9313:55:::1;;2643:1;9985:15;:33;10001:16;:9;1408:4:57::0;1387:26;;;938:491;10001:16:77::1;9985:33:::0;;::::1;::::0;;::::1;::::0;;;;;;;;-1:-1:-1;9985:33:77;:54;;;;10325:38;;10341:10:::1;23031:34:106::0;;23105:13;;22980:42;23101:22;;;23081:18;;;23074:50;23170:15;;;23164:22;23160:31;;23140:18;;;23133:59;23238:15;;;23232:22;23228:31;23223:2;23208:18;;23201:59;10325:38:77::1;::::0;22957:3:106;22942:19;10325:38:77::1;;;;;;;7984:2394;;;;7979:3;;;;;7930:2448;;;;7108:3280;;6959:3435:::0;;:::o;2068:1038:103:-;2151:21;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;2151:21:103;1593:27:94;;;;;;;;;;;;;;;;;;2208:28:103;;;2340:21;2424:66;:11;2458:8;1583:59:94;2488:1:103;2424:33;:66::i;:::-;1593:27:94;;;;;;;;;;;;;;;;;;2396:94:103;;-1:-1:-1;2396:94:103;-1:-1:-1;2396:94:103;;-1:-1:-1;2646:66:103;:11;2396:94;1583:59:94;2710:1:103;2646:33;:66::i;:::-;1593:27:94;;;;;;;;;;;;;;;;;;2618:94:103;;-1:-1:-1;2618:94:103;-1:-1:-1;2618:94:103;;-1:-1:-1;2870:66:103;:11;2618:94;1583:59:94;2934:1:103;2870:33;:66::i;:::-;3051:38;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3051:38:103;;2068:1038;-1:-1:-1;;;;;2068:1038:103:o;6685:198:34:-;6768:12;6799:77;6820:6;6828:4;6799:77;;;;;;;;;;;;;;;;;:20;:77::i;2580:287:19:-;1830:1;2712:7;;:19;2704:63;;;;;;;23473:2:106;2704:63:19;;;23455:21:106;23512:2;23492:18;;;23485:30;23551:33;23531:18;;;23524:61;23602:18;;2704:63:19;23271:355:106;2704:63:19;1830:1;2842:7;:18;2580:287::o;11249:1033:77:-;11420:7;11429;11438:16;11466:26;11495:60;11512:26;:13;2530:4:76;2524:11;;2563:1;2548:17;;2597:4;2585:17;;2578:28;;;;2632:17;;;2619:31;;2524:11;2375:291;11512:26:77;11540:14;11495:16;:60::i;:::-;11466:89;;11570:28;11578:10;11590:7;11570:28;;;;;;;:::i;:::-;;;;;;;;1408:4:57;1387:26;;-1:-1:-1;11731:30:77;;;:15;-1:-1:-1;11731:30:77;-1:-1:-1;11731:30:77;;;11727:133;;11814:31;;;;;;;;6910:25:106;;;6883:18;;11814:31:77;6764:177:106;11727:133:77;11659:211;11881:22;11905:20;11929:9;:21;;;:27;;;11970:9;:15;;;11999:55;12048:4;1170:1:50;11999:40:77;;:55;;;;:::i;:::-;12095:20;;;;1517:4:56;1485:36;;;2519:16:77;1484:147:56;12186:16:77;;;12200:1;12186:16;;;;;;;;;12165:7;;12186:16;11929:283;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11880:332;;;;12230:19;:5;1316:4:75;1305:16;;1160:177;12230:19:77;1699:12:75;;12222:53:77;;1693:4:75;1689:23;;;1668:46;;;;;-1:-1:-1;12271:3:77;-1:-1:-1;12222:53:77;-1:-1:-1;;;;;11249:1033:77:o;6825:347:103:-;6970:10;;:14;6966:95;;7000:50;;;;;:20;;;;;;:50;;1170:1:50;;7046:3:103;;7000:50;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6966:95;7070:24;:12;:22;:24::i;:::-;7104:25;:12;:23;:25::i;:::-;7139:26;:12;:24;:26::i;:::-;6825:347;;;:::o;2873:209:19:-;1787:1;3053:7;:22;2873:209::o;558:64:33:-;5374:13:18;;;;;;;5366:69;;;;;;;20815:2:106;5366:69:18;;;20797:21:106;20854:2;20834:18;;;20827:30;20893:34;20873:18;;;20866:62;20964:13;20944:18;;;20937:41;20995:19;;5366:69:18;20613:407:106;5366:69:18;558:64:33:o;1868:111:19:-;5374:13:18;;;;;;;5366:69;;;;;;;20815:2:106;5366:69:18;;;20797:21:106;20854:2;20834:18;;;20827:30;20893:34;20873:18;;;20866:62;20964:13;20944:18;;;20937:41;20995:19;;5366:69:18;20613:407:106;5366:69:18;1938:34:19::1;:32;:34::i;5720:1757:74:-:0;5858:23;;6096:4;6089:12;;6206:5;6186:334;6225:5;6217:6;6214:17;6186:334;;;6326:4;6318:6;6314:17;6387:8;6360:24;6354:31;6351:45;6348:158;;6438:24;-1:-1:-1;6483:5:74;;6348:158;-1:-1:-1;6244:17:74;;;6186:334;;;6190:23;6611:15;6631:1;6596:36;6592:99;;6655:25;;;;;;;;6910::106;;;6883:18;;6655:25:74;6764:177:106;6592:99:74;6864:4;6858:11;6841:28;;6921:4;6906:13;6902:24;6980:4;6963:15;6959:26;6939:296;6999:5;6991:6;6988:17;6939:296;;;7193:28;;;7058:4;7040:23;;;;7090:17;;6939:296;;;6943:44;7325:12;7319:4;7312:26;7458:1;7451:4;7435:13;7421:12;7417:32;7413:43;7409:51;7394:13;7387:74;;6827:644;5720:1757;;;;;;;:::o;7069:325:34:-;7210:12;7235;7249:23;7276:6;:19;;7296:4;7276:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7234:67;;;;7318:69;7345:6;7353:7;7362:10;7374:12;7318:26;:69::i;:::-;7311:76;7069:325;-1:-1:-1;;;;;;7069:325:34:o;7568:2290:55:-;7703:18;7761:24;7802:14;:21;7788:36;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7788:36:55;;7761:63;;7973:21;8047:1;8023:14;:21;:25;:57;;8079:1;8023:57;;;8051:14;:21;8075:1;8051:25;8023:57;8001:11;:18;7997:1;:22;:84;7973:108;;8096:26;8141:13;8125:30;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8096:59;;8169:14;8219:17;3283:4:75;3277:11;;3315:1;3301:16;;2690:10:55;3348:4:75;3337:16;;3330:27;2728:4:55;3377:16:75;;;3370:27;2613:16:55;3423::75;;3410:30;;;3277:11;2574:169:55;8219:17;8201:7;8209:6;8201:15;;;;;;;;:::i;:::-;;;;;;:35;;;;8256:9;8251:140;8275:11;:18;8271:1;:22;8251:140;;;8318:8;;;;;;;8362:11;8374:1;8362:14;;;;;;;;:::i;:::-;;;;;;;8344:7;8352:6;8344:15;;;;;;;;:::i;:::-;;;;;;;;;;:32;8295:3;;8251:140;;;-1:-1:-1;8409:21:55;;:25;8405:1408;;8454:8;;;;;;;8498:7;8480;8488:6;8480:15;;;;;;;;:::i;:::-;;;;;;:25;;;;8529:9;8524:1275;8548:14;:21;8544:1;:25;8524:1275;;;9226:284;9292:14;9307:1;9292:17;;;;;;;;:::i;:::-;;;;;;;:24;;;9346:81;9375:51;9400:14;9415:1;9400:17;;;;;;;;:::i;:::-;;;;;;;:25;;;4081:13:43;;4096:4;4077:24;;;4058:17;;4048:54;;3908:210;9375:51:55;7455:58:67;;29461:66:106;7455:58:67;;;29449:79:106;29544:12;;;29537:28;;;7325:7:67;;29581:12:106;;7455:58:67;;;;;;;;;;;;7445:69;;;;;;7438:76;;7256:265;;;;9346:81:55;9457:14;9472:1;9457:17;;;;;;;;:::i;:::-;;;;;;;:27;;;9226:36;:284::i;:::-;8598:1010;;9566:19;;;;;;;;6910:25:106;;;6883:18;;9566:19:55;6764:177:106;8598:1010:55;9659:14;9674:1;9659:17;;;;;;;;:::i;:::-;;;;;;;:24;;;9643:42;;9630:7;9638:1;9630:10;;;;;;;;:::i;:::-;;;;;;:55;;;;;9707:8;;;;;;;9755:14;9770:1;9755:17;;;;;;;;:::i;:::-;;;;;;;:25;;;9737:7;9745:6;9737:15;;;;;;;;:::i;:::-;;;;;;;;;;:43;8571:3;;8524:1275;;;;8405:1408;-1:-1:-1;9834:7:55;7568:2290;-1:-1:-1;;;;;7568:2290:55:o;933:344:58:-;1053:42;1150:25;;;1195:4;1188:20;1256:4;1243:18;;;933:344::o;3490:838:103:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3631:681:103;3655:18;;:25;3651:29;;3631:681;;;3716:18;;:21;;3735:1;;3716:21;;;;;;:::i;:::-;;;;;;;3705:32;;3776:10;3759:27;;:8;:13;;;:27;;;3755:543;;3862:11;;;;3875:15;;;;3817:14;;3810:81;;:39;;;;;3850:10;;3862:11;3810:39;:81::i;:::-;3755:543;;;3945:4;3920:30;;:8;:13;;;:30;;;3916:382;;4010:11;;;;4023:15;;;;3981:14;;3974:65;;:35;;;;;;:65::i;3916:382::-;4257:22;;;;;;;;;;;;;;3916:382;3682:3;;3631:681;;4715:536;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4858:377:103;4882:12;:19;;;:26;4878:1;:30;4858:377;;;4944:12;:19;;;4964:1;4944:22;;;;;;;;:::i;:::-;;;;;;;4933:33;;5005:10;4988:27;;:8;:13;;;:27;;;;:61;;;;-1:-1:-1;5019:13:103;;;;:30;;5044:4;5019:30;;4988:61;4984:138;;;5080:23;;;;;;;;;;;;;;4984:138;5147:14;;5180:13;;;;5195:11;;;;;5208;;;;5139:81;;;;;:40;28084:15:106;;;5139:81:103;;;28066:34:106;28136:15;;;28116:18;;;28109:43;28168:18;;;28161:34;;;;5139:40:103;;;;;27978:18:106;;5139:81:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4910:3;;;;;4858:377;;5641:658;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5786:497:103;5810:12;:20;;;:27;5806:1;:31;5786:497;;;5873:12;:20;;;5894:1;5873:23;;;;;;;;:::i;:::-;;;;;;;5862:34;;5935:10;5918:27;;:8;:13;;;:27;;;;:61;;;;-1:-1:-1;5949:13:103;;;;:30;;5974:4;5949:30;;5918:61;5914:139;;;6010:24;;;;;;;;;;;;;;5914:139;6174:14;;6207:13;;;;6222:11;;;;;6235;;;;6248:15;;;;6165:103;;;;;:41;28580:15:106;;;6165:103:103;;;28562:34:106;28632:15;;;28612:18;;;28605:43;28664:18;;;28657:34;28707:18;;;28700:34;;;;28771:3;28750:19;;;28743:32;-1:-1:-1;28791:19:106;;;28784:30;6165:41:103;;;;;28831:19:106;;6165:103:103;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5839:3:103;;;;;-1:-1:-1;5786:497:103;;-1:-1:-1;5786:497:103;1985:109:19;5374:13:18;;;;;;;5366:69;;;;;;;20815:2:106;5366:69:18;;;20797:21:106;20854:2;20834:18;;;20827:30;20893:34;20873:18;;;20866:62;20964:13;20944:18;;;20937:41;20995:19;;5366:69:18;20613:407:106;7682:628:34;7862:12;7890:7;7886:418;;;7917:10;:17;7938:1;7917:22;7913:286;;1713:19;;;;8124:60;;;;;;;29063:2:106;8124:60:34;;;29045:21:106;29102:2;29082:18;;;29075:30;29141:31;29121:18;;;29114:59;29190:18;;8124:60:34;28861:353:106;8124:60:34;-1:-1:-1;8219:10:34;8212:17;;7886:418;8260:33;8268:10;8280:12;8260:7;:33::i;1039:667:68:-;1175:4;1192:17;1211:24;1239:33;1256:4;1262:9;1239:16;:33::i;:::-;1191:81;;-1:-1:-1;1191:81:68;-1:-1:-1;1295:26:68;1286:5;:35;;;;;;;;:::i;:::-;;:58;;;;;1338:6;1325:19;;:9;:19;;;1286:58;1282:100;;;1367:4;1360:11;;;;;;1282:100;1393:12;1407:19;1430:6;:17;;1484:34;;;1520:4;1526:9;1461:75;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1430:116;;;;1461:75;1430:116;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1392:154;;;;1564:7;:42;;;;;1587:6;:13;1604:2;1587:19;1564:42;:134;;;;-1:-1:-1;1622:29:68;;1663:34;;1622:29;;;;;;;;;;;;:::i;:::-;:76;1564:134;1556:143;1039:667;-1:-1:-1;;;;;;;;1039:667:68:o;974:241:63:-;1139:68;;28015:42:106;28084:15;;;1139:68:63;;;28066:34:106;28136:15;;28116:18;;;28109:43;28168:18;;;28161:34;;;1112:96:63;;1132:5;;1162:27;;27978:18:106;;1139:68:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1112:19;:96::i;:::-;974:241;;;;:::o;763:205::-;902:58;;30479:42:106;30467:55;;902:58:63;;;30449:74:106;30539:18;;;30532:34;;;875:86:63;;895:5;;925:23;;30422:18:106;;902:58:63;30275:297:106;8832:540:34;8991:17;;:21;8987:379;;9219:10;9213:17;9275:15;9262:10;9258:2;9254:19;9247:44;8987:379;9342:12;9335:20;;;;;;;;;;;:::i;2145:730:67:-;2226:7;2235:12;2263:9;:16;2283:2;2263:22;2259:610;;2599:4;2584:20;;2578:27;2648:4;2633:20;;2627:27;2705:4;2690:20;;2684:27;2301:9;2676:36;2746:25;2757:4;2676:36;2578:27;2627;2746:10;:25::i;:::-;2739:32;;;;;;;;;2259:610;-1:-1:-1;2818:1:67;;-1:-1:-1;2822:35:67;2259:610;2145:730;;;;;:::o;3747:706:63:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:63;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;31285:2:106;4351:85:63;;;31267:21:106;31324:2;31304:18;;;31297:30;31363:34;31343:18;;;31336:62;31434:12;31414:18;;;31407:40;31464:19;;4351:85:63;31083:406:106;5069:1494:67;5195:7;;6119:66;6106:79;;6102:161;;;-1:-1:-1;6217:1:67;;-1:-1:-1;6221:30:67;6201:51;;6102:161;6374:24;;;6357:14;6374:24;;;;;;;;;31721:25:106;;;31794:4;31782:17;;31762:18;;;31755:45;;;;31816:18;;;31809:34;;;31859:18;;;31852:34;;;6374:24:67;;31693:19:106;;6374:24:67;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6374:24:67;;;;;;-1:-1:-1;;6412:20:67;;;6408:101;;6464:1;6468:29;6448:50;;;;;;;6408:101;6527:6;-1:-1:-1;6535:20:67;;-1:-1:-1;5069:1494:67;;;;;;;;:::o;3873:223:65:-;4006:12;4037:52;4059:6;4067:4;4073:1;4076:12;4006;5241;5255:23;5282:6;:11;;5301:5;5308:4;5282:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5240:73;;;;5330:69;5357:6;5365:7;5374:10;5386:12;5330:26;:69::i;:::-;5323:76;4960:446;-1:-1:-1;;;;;;;4960:446:65:o;14:332:106:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;543:154;629:42;622:5;618:54;611:5;608:65;598:93;;687:1;684;677:12;598:93;543:154;:::o;702:184::-;754:77;751:1;744:88;851:4;848:1;841:15;875:4;872:1;865:15;891:253;963:2;957:9;1005:4;993:17;;1040:18;1025:34;;1061:22;;;1022:62;1019:88;;;1087:18;;:::i;:::-;1123:2;1116:22;891:253;:::o;1149:334::-;1220:2;1214:9;1276:2;1266:13;;1281:66;1262:86;1250:99;;1379:18;1364:34;;1400:22;;;1361:62;1358:88;;;1426:18;;:::i;:::-;1462:2;1455:22;1149:334;;-1:-1:-1;1149:334:106:o;1488:245::-;1536:4;1569:18;1561:6;1558:30;1555:56;;;1591:18;;:::i;:::-;-1:-1:-1;1648:2:106;1636:15;1653:66;1632:88;1722:4;1628:99;;1488:245::o;1738:462::-;1780:5;1833:3;1826:4;1818:6;1814:17;1810:27;1800:55;;1851:1;1848;1841:12;1800:55;1887:6;1874:20;1918:48;1934:31;1962:2;1934:31;:::i;:::-;1918:48;:::i;:::-;1991:2;1982:7;1975:19;2037:3;2030:4;2025:2;2017:6;2013:15;2009:26;2006:35;2003:55;;;2054:1;2051;2044:12;2003:55;2119:2;2112:4;2104:6;2100:17;2093:4;2084:7;2080:18;2067:55;2167:1;2142:16;;;2160:4;2138:27;2131:38;;;;2146:7;1738:462;-1:-1:-1;;;1738:462:106:o;2205:665::-;2300:6;2308;2316;2324;2377:3;2365:9;2356:7;2352:23;2348:33;2345:53;;;2394:1;2391;2384:12;2345:53;2433:9;2420:23;2452:31;2477:5;2452:31;:::i;:::-;2502:5;-1:-1:-1;2559:2:106;2544:18;;2531:32;2572:33;2531:32;2572:33;:::i;:::-;2624:7;-1:-1:-1;2678:2:106;2663:18;;2650:32;;-1:-1:-1;2733:2:106;2718:18;;2705:32;2760:18;2749:30;;2746:50;;;2792:1;2789;2782:12;2746:50;2815:49;2856:7;2847:6;2836:9;2832:22;2815:49;:::i;:::-;2805:59;;;2205:665;;;;;;;:::o;3128:200::-;3205:4;3238:18;3230:6;3227:30;3224:56;;;3260:18;;:::i;:::-;-1:-1:-1;3305:1:106;3301:14;3317:4;3297:25;;3128:200::o;3333:679::-;3387:5;3440:3;3433:4;3425:6;3421:17;3417:27;3407:55;;3458:1;3455;3448:12;3407:55;3494:6;3481:20;3520:4;3544:77;3560:60;3617:2;3560:60;:::i;3544:77::-;3655:15;;;3741:1;3737:10;;;;3725:23;;3721:32;;;3686:12;;;;3765:15;;;3762:35;;;3793:1;3790;3783:12;3762:35;3829:2;3821:6;3817:15;3841:142;3857:6;3852:3;3849:15;3841:142;;;3923:17;;3911:30;;3961:12;;;;3874;;3841:142;;;-1:-1:-1;4001:5:106;3333:679;-1:-1:-1;;;;;;3333:679:106:o;4017:2146::-;4137:6;4168:2;4211;4199:9;4190:7;4186:23;4182:32;4179:52;;;4227:1;4224;4217:12;4179:52;4267:9;4254:23;4296:18;4337:2;4329:6;4326:14;4323:34;;;4353:1;4350;4343:12;4323:34;4391:6;4380:9;4376:22;4366:32;;4436:7;4429:4;4425:2;4421:13;4417:27;4407:55;;4458:1;4455;4448:12;4407:55;4494:2;4481:16;4517:77;4533:60;4590:2;4533:60;:::i;4517:77::-;4628:15;;;4710:1;4706:10;;;;4698:19;;4694:28;;;4659:12;;;;4734:19;;;4731:39;;;4766:1;4763;4756:12;4731:39;4798:2;4794;4790:11;4810:1323;4826:6;4821:3;4818:15;4810:1323;;;4912:3;4899:17;4948:2;4935:11;4932:19;4929:109;;;4992:1;5021:2;5017;5010:14;4929:109;5061:20;;5104:4;5132:16;;;5150:66;5128:89;5124:98;-1:-1:-1;5121:188:106;;;5263:1;5292:2;5288;5281:14;5121:188;5335:22;;:::i;:::-;5406:2;5402;5398:11;5385:25;5423:33;5448:7;5423:33;:::i;:::-;5469:22;;5514:2;5558:11;;;5545:25;5586:16;;;5583:109;;;5644:1;5674:3;5669;5662:16;5583:109;5728:53;5773:7;5768:2;5757:8;5753:2;5749:17;5745:26;5728:53;:::i;:::-;5712:14;;;5705:77;-1:-1:-1;5824:11:106;;;5811:25;;5852:16;;;5849:109;;;5910:1;5940:3;5935;5928:16;5849:109;5994:65;6051:7;6046:2;6035:8;6031:2;6027:17;6023:26;5994:65;:::i;:::-;5978:14;;;5971:89;6073:18;;-1:-1:-1;;6111:12:106;;;;4843;;4810:1323;;;-1:-1:-1;6152:5:106;4017:2146;-1:-1:-1;;;;;;;;4017:2146:106:o;6168:591::-;6238:6;6246;6299:2;6287:9;6278:7;6274:23;6270:32;6267:52;;;6315:1;6312;6305:12;6267:52;6355:9;6342:23;6384:18;6425:2;6417:6;6414:14;6411:34;;;6441:1;6438;6431:12;6411:34;6479:6;6468:9;6464:22;6454:32;;6524:7;6517:4;6513:2;6509:13;6505:27;6495:55;;6546:1;6543;6536:12;6495:55;6586:2;6573:16;6612:2;6604:6;6601:14;6598:34;;;6628:1;6625;6618:12;6598:34;6673:7;6668:2;6659:6;6655:2;6651:15;6647:24;6644:37;6641:57;;;6694:1;6691;6684:12;6641:57;6725:2;6717:11;;;;;6747:6;;-1:-1:-1;6168:591:106;;-1:-1:-1;;;;6168:591:106:o;6946:348::-;7030:6;7083:2;7071:9;7062:7;7058:23;7054:32;7051:52;;;7099:1;7096;7089:12;7051:52;7139:9;7126:23;7172:18;7164:6;7161:30;7158:50;;;7204:1;7201;7194:12;7158:50;7227:61;7280:7;7271:6;7260:9;7256:22;7227:61;:::i;7658:869::-;7726:3;7764:5;7758:12;7791:6;7786:3;7779:19;7817:4;7846:2;7841:3;7837:12;7830:19;;7883:2;7876:5;7872:14;7904:1;7914:588;7928:6;7925:1;7922:13;7914:588;;;7987:13;;8094:9;;8023:42;8090:18;;;8078:31;;8153:11;;;8147:18;8143:27;;8129:12;;;8122:49;8194:4;8242:11;;;8236:18;8232:27;;;8218:12;;;8211:49;8283:4;8327:11;;;8321:18;8307:12;;;8300:40;8363:4;8407:11;;;8401:18;8387:12;;;8380:40;8449:4;8440:14;;;;8477:15;;;;7950:1;7943:9;7914:588;;;-1:-1:-1;8518:3:106;;7658:869;-1:-1:-1;;;;;7658:869:106:o;8532:1602::-;8690:4;8719:2;8748;8737:9;8730:21;8770:3;8811:2;8800:9;8796:18;8849:6;8843:13;8892:4;8887:2;8876:9;8872:18;8865:32;8917:6;8952:12;8946:19;8989:6;8981;8974:22;9027:3;9016:9;9012:19;9005:26;;9072:2;9058:12;9054:21;9040:35;;9093:1;9084:10;;9103:194;9117:6;9114:1;9111:13;9103:194;;;9166:51;9213:3;9204:6;9198:13;7376:42;7457:2;7449:5;7443:12;7439:21;7434:3;7427:34;7522:2;7514:4;7507:5;7503:16;7497:23;7493:32;7486:4;7481:3;7477:14;7470:56;7587:2;7579:4;7572:5;7568:16;7562:23;7558:32;7551:4;7546:3;7542:14;7535:56;;7640:4;7633:5;7629:16;7623:23;7616:4;7611:3;7607:14;7600:47;7299:354;;;9166:51;9272:15;;;;9139:1;9132:9;;;;;9237:12;;;;9103:194;;;-1:-1:-1;9334:15:106;;;9328:22;9369:66;9475:19;;;9471:28;;9466:2;9451:18;;9444:56;9550:21;;9580;;;9656:23;;;;-1:-1:-1;9369:66:106;-1:-1:-1;9699:1:106;;9619:12;;;9709:214;9725:8;9720:3;9717:17;9709:214;;;9780:55;9829:5;9818:8;9812:15;7376:42;7457:2;7449:5;7443:12;7439:21;7434:3;7427:34;7522:2;7514:4;7507:5;7503:16;7497:23;7493:32;7486:4;7481:3;7477:14;7470:56;7587:2;7579:4;7572:5;7568:16;7562:23;7558:32;7551:4;7546:3;7542:14;7535:56;;7640:4;7633:5;7629:16;7623:23;7616:4;7611:3;7607:14;7600:47;7299:354;;;9780:55;9896:17;;;;9753:1;9744:11;;;;;9857:14;;;;9709:214;;;9713:3;9972:2;9964:6;9960:15;9954:22;9932:44;;10041:2;10029:9;10022:5;10018:21;10014:30;10007:4;9996:9;9992:20;9985:60;10062:66;10122:5;10106:14;10062:66;:::i;:::-;10054:74;8532:1602;-1:-1:-1;;;;;;;;;8532:1602:106:o;10139:626::-;10236:6;10244;10297:2;10285:9;10276:7;10272:23;10268:32;10265:52;;;10313:1;10310;10303:12;10265:52;10353:9;10340:23;10382:18;10423:2;10415:6;10412:14;10409:34;;;10439:1;10436;10429:12;10409:34;10477:6;10466:9;10462:22;10452:32;;10522:7;10515:4;10511:2;10507:13;10503:27;10493:55;;10544:1;10541;10534:12;10493:55;10584:2;10571:16;10610:2;10602:6;10599:14;10596:34;;;10626:1;10623;10616:12;10596:34;10679:7;10674:2;10664:6;10661:1;10657:14;10653:2;10649:23;10645:32;10642:45;10639:65;;;10700:1;10697;10690:12;10770:250;10855:1;10865:113;10879:6;10876:1;10873:13;10865:113;;;10955:11;;;10949:18;10936:11;;;10929:39;10901:2;10894:10;10865:113;;;-1:-1:-1;;11012:1:106;10994:16;;10987:27;10770:250::o;11025:329::-;11066:3;11104:5;11098:12;11131:6;11126:3;11119:19;11147:76;11216:6;11209:4;11204:3;11200:14;11193:4;11186:5;11182:16;11147:76;:::i;:::-;11268:2;11256:15;11273:66;11252:88;11243:98;;;;11343:4;11239:109;;11025:329;-1:-1:-1;;11025:329:106:o;11359:859::-;11519:4;11548:2;11588;11577:9;11573:18;11618:2;11607:9;11600:21;11641:6;11676;11670:13;11707:6;11699;11692:22;11745:2;11734:9;11730:18;11723:25;;11807:2;11797:6;11794:1;11790:14;11779:9;11775:30;11771:39;11757:53;;11845:2;11837:6;11833:15;11866:1;11876:313;11890:6;11887:1;11884:13;11876:313;;;11979:66;11967:9;11959:6;11955:22;11951:95;11946:3;11939:108;12070:39;12102:6;12093;12087:13;12070:39;:::i;:::-;12060:49;-1:-1:-1;12167:12:106;;;;12132:15;;;;11912:1;11905:9;11876:313;;;-1:-1:-1;12206:6:106;;11359:859;-1:-1:-1;;;;;;;11359:859:106:o;12223:1071::-;12377:6;12385;12393;12401;12409;12462:3;12450:9;12441:7;12437:23;12433:33;12430:53;;;12479:1;12476;12469:12;12430:53;12518:9;12505:23;12537:31;12562:5;12537:31;:::i;:::-;12587:5;-1:-1:-1;12644:2:106;12629:18;;12616:32;12657:33;12616:32;12657:33;:::i;:::-;12709:7;-1:-1:-1;12767:2:106;12752:18;;12739:32;12790:18;12820:14;;;12817:34;;;12847:1;12844;12837:12;12817:34;12870:61;12923:7;12914:6;12903:9;12899:22;12870:61;:::i;:::-;12860:71;;12984:2;12973:9;12969:18;12956:32;12940:48;;13013:2;13003:8;13000:16;12997:36;;;13029:1;13026;13019:12;12997:36;13052:63;13107:7;13096:8;13085:9;13081:24;13052:63;:::i;:::-;13042:73;;13168:3;13157:9;13153:19;13140:33;13124:49;;13198:2;13188:8;13185:16;13182:36;;;13214:1;13211;13204:12;13182:36;;13237:51;13280:7;13269:8;13258:9;13254:24;13237:51;:::i;:::-;13227:61;;;12223:1071;;;;;;;;:::o;13299:734::-;13403:6;13411;13419;13427;13435;13488:3;13476:9;13467:7;13463:23;13459:33;13456:53;;;13505:1;13502;13495:12;13456:53;13544:9;13531:23;13563:31;13588:5;13563:31;:::i;:::-;13613:5;-1:-1:-1;13670:2:106;13655:18;;13642:32;13683:33;13642:32;13683:33;:::i;:::-;13735:7;-1:-1:-1;13789:2:106;13774:18;;13761:32;;-1:-1:-1;13840:2:106;13825:18;;13812:32;;-1:-1:-1;13895:3:106;13880:19;;13867:33;13923:18;13912:30;;13909:50;;;13955:1;13952;13945:12;13909:50;13978:49;14019:7;14010:6;13999:9;13995:22;13978:49;:::i;14038:2916::-;14229:6;14237;14245;14289:9;14280:7;14276:23;14319:3;14315:2;14311:12;14308:32;;;14336:1;14333;14326:12;14308:32;14360:4;14356:2;14352:13;14349:33;;;14378:1;14375;14368:12;14349:33;;14404:22;;:::i;:::-;14463:9;14450:23;14482:33;14507:7;14482:33;:::i;:::-;14524:22;;14565:2;14604:18;;;14591:32;14632:33;14591:32;14632:33;:::i;:::-;14681:14;;;14674:31;14757:2;14742:18;;14729:32;14770:33;14729:32;14770:33;:::i;:::-;14830:2;14819:14;;14812:31;14823:5;;-1:-1:-1;14918:4:106;14903:20;;14890:34;;14943:18;14973:14;;;14970:34;;;15000:1;14997;14990:12;14970:34;15023:61;15076:7;15067:6;15056:9;15052:22;15023:61;:::i;:::-;15013:71;;15137:3;15126:9;15122:19;15109:33;15093:49;;15167:2;15157:8;15154:16;15151:36;;;15183:1;15180;15173:12;15151:36;15221:8;15210:9;15206:24;15196:34;;15268:7;15261:4;15257:2;15253:13;15249:27;15239:55;;15290:1;15287;15280:12;15239:55;15326:2;15313:16;15349:77;15365:60;15422:2;15365:60;:::i;15349:77::-;15460:15;;;15542:1;15538:10;;;;15530:19;;15526:28;;;15491:12;;;;15566:19;;;15563:39;;;15598:1;15595;15588:12;15563:39;15630:2;15626;15622:11;15642:1282;15658:6;15653:3;15650:15;15642:1282;;;15744:3;15731:17;15780:2;15767:11;15764:19;15761:109;;;15824:1;15853:2;15849;15842:14;15761:109;15893:20;;16024:4;15937:16;;;15955:66;15933:89;15929:100;15926:190;;;16070:1;16099:2;16095;16088:14;15926:190;16144:22;;:::i;:::-;16215:2;16211;16207:11;16194:25;16232:33;16257:7;16232:33;:::i;:::-;16278:24;;16352:2;16344:11;;16331:25;16372:16;;;16369:106;;;16429:1;16458:2;16454;16447:14;16369:106;16513:65;16570:7;16565:2;16554:8;16550:2;16546:17;16542:26;16513:65;:::i;:::-;16508:2;16499:7;16495:16;16488:91;;16629:4;16625:2;16621:13;16608:27;16664:2;16654:8;16651:16;16648:109;;;16709:1;16739:3;16734;16727:16;16648:109;16795:53;16840:7;16835:2;16824:8;16820:2;16816:17;16812:26;16795:53;:::i;:::-;16790:2;16777:16;;16770:79;-1:-1:-1;16862:20:106;;-1:-1:-1;16902:12:106;;;;15675;;15642:1282;;;15646:3;16943:5;16933:15;;;;;;;;14038:2916;;;;;:::o;17374:435::-;17427:3;17465:5;17459:12;17492:6;17487:3;17480:19;17518:4;17547:2;17542:3;17538:12;17531:19;;17584:2;17577:5;17573:14;17605:1;17615:169;17629:6;17626:1;17623:13;17615:169;;;17690:13;;17678:26;;17724:12;;;;17759:15;;;;17651:1;17644:9;17615:169;;17814:1467;18056:4;18085:2;18125;18114:9;18110:18;18147:42;18228:2;18220:6;18216:15;18205:9;18198:34;18251:2;18289;18284;18273:9;18269:18;18262:30;18312:6;18347;18341:13;18378:6;18370;18363:22;18404:2;18394:12;;18437:2;18426:9;18422:18;18415:25;;18499:2;18489:6;18486:1;18482:14;18471:9;18467:30;18463:39;18537:2;18529:6;18525:15;18558:1;18568:684;18582:6;18579:1;18576:13;18568:684;;;18671:66;18659:9;18651:6;18647:22;18643:95;18638:3;18631:108;18768:6;18762:13;18818:2;18813;18807:9;18803:18;18795:6;18788:34;18869:2;18865;18861:11;18855:18;18910:2;18905;18897:6;18893:15;18886:27;18940:47;18983:2;18975:6;18971:15;18957:12;18940:47;:::i;:::-;19028:11;;;19022:18;19077:19;;;19060:15;;;19053:44;19022:18;18926:61;-1:-1:-1;19120:52:106;18926:61;19022:18;19120:52;:::i;:::-;19230:12;;;;19110:62;-1:-1:-1;;;19195:15:106;;;;18604:1;18597:9;18568:684;;;-1:-1:-1;19269:6:106;;17814:1467;-1:-1:-1;;;;;;;;;;;17814:1467:106:o;19485:184::-;19537:77;19534:1;19527:88;19634:4;19631:1;19624:15;19658:4;19655:1;19648:15;19674:580;19751:4;19757:6;19817:11;19804:25;19907:66;19896:8;19880:14;19876:29;19872:102;19852:18;19848:127;19838:155;;19989:1;19986;19979:12;19838:155;20016:33;;20068:20;;;-1:-1:-1;20111:18:106;20100:30;;20097:50;;;20143:1;20140;20133:12;20097:50;20176:4;20164:17;;-1:-1:-1;20207:14:106;20203:27;;;20193:38;;20190:58;;;20244:1;20241;20234:12;20259:349;20298:3;20329:66;20322:5;20319:77;20316:257;;20429:77;20426:1;20419:88;20530:4;20527:1;20520:15;20558:4;20555:1;20548:15;20316:257;-1:-1:-1;20600:1:106;20589:13;;20259:349::o;21207:421::-;21432:2;21421:9;21414:21;21395:4;21458:44;21498:2;21487:9;21483:18;21475:6;21458:44;:::i;:::-;21550:9;21542:6;21538:22;21533:2;21522:9;21518:18;21511:50;21578:44;21615:6;21607;21578:44;:::i;:::-;21570:52;21207:421;-1:-1:-1;;;;;21207:421:106:o;21633:1097::-;21792:6;21800;21808;21816;21869:3;21857:9;21848:7;21844:23;21840:33;21837:53;;;21886:1;21883;21876:12;21837:53;21918:9;21912:16;21937:31;21962:5;21937:31;:::i;:::-;22037:2;22022:18;;22016:25;21987:5;;-1:-1:-1;22050:33:106;22016:25;22050:33;:::i;:::-;22154:2;22139:18;;22133:25;22102:7;;-1:-1:-1;22167:33:106;22133:25;22167:33;:::i;:::-;22270:2;22255:18;;22249:25;22219:7;;-1:-1:-1;22297:18:106;22286:30;;22283:50;;;22329:1;22326;22319:12;22283:50;22352:22;;22405:4;22397:13;;22393:27;-1:-1:-1;22383:55:106;;22434:1;22431;22424:12;22383:55;22463:2;22457:9;22488:48;22504:31;22532:2;22504:31;:::i;22488:48::-;22559:2;22552:5;22545:17;22599:7;22594:2;22589;22585;22581:11;22577:20;22574:33;22571:53;;;22620:1;22617;22610:12;22571:53;22633:67;22697:2;22692;22685:5;22681:14;22676:2;22672;22668:11;22633:67;:::i;:::-;21633:1097;;;;-1:-1:-1;21633:1097:106;;-1:-1:-1;;;;21633:1097:106:o;23631:638::-;23694:3;23732:5;23726:12;23759:6;23754:3;23747:19;23785:4;23826:2;23821:3;23817:12;23851:11;23878;23871:18;;23928:6;23925:1;23921:14;23914:5;23910:26;23898:38;;23970:2;23963:5;23959:14;23991:1;24001:242;24015:6;24012:1;24009:13;24001:242;;;24086:5;24080:4;24076:16;24071:3;24064:29;24114:49;24158:4;24149:6;24143:13;24114:49;:::i;:::-;24221:12;;;;24106:57;-1:-1:-1;24186:15:106;;;;24037:1;24030:9;24001:242;;;-1:-1:-1;24259:4:106;;23631:638;-1:-1:-1;;;;;;;23631:638:106:o;24274:441::-;24543:42;24535:6;24531:55;24520:9;24513:74;24623:2;24618;24607:9;24603:18;24596:30;24494:4;24643:66;24705:2;24694:9;24690:18;24682:6;24643:66;:::i;24720:901::-;25234:42;25226:6;25222:55;25211:9;25204:74;25314:6;25309:2;25298:9;25294:18;25287:34;25357:6;25352:2;25341:9;25337:18;25330:34;25400:3;25395:2;25384:9;25380:18;25373:31;25185:4;25427:67;25489:3;25478:9;25474:19;25466:6;25427:67;:::i;:::-;25543:9;25535:6;25531:22;25525:3;25514:9;25510:19;25503:51;25571:44;25608:6;25600;25571:44;:::i;25626:676::-;25691:5;25744:3;25737:4;25729:6;25725:17;25721:27;25711:55;;25762:1;25759;25752:12;25711:55;25791:6;25785:13;25817:4;25841:77;25857:60;25914:2;25857:60;:::i;25841:77::-;25952:15;;;26038:1;26034:10;;;;26022:23;;26018:32;;;25983:12;;;;26062:15;;;26059:35;;;26090:1;26087;26080:12;26059:35;26126:2;26118:6;26114:15;26138:135;26154:6;26149:3;26146:15;26138:135;;;26220:10;;26208:23;;26251:12;;;;26171;;26138:135;;26307:614;26436:6;26444;26497:2;26485:9;26476:7;26472:23;26468:32;26465:52;;;26513:1;26510;26503:12;26465:52;26546:9;26540:16;26575:18;26616:2;26608:6;26605:14;26602:34;;;26632:1;26629;26622:12;26602:34;26655:72;26719:7;26710:6;26699:9;26695:22;26655:72;:::i;:::-;26645:82;;26773:2;26762:9;26758:18;26752:25;26736:41;;26802:2;26792:8;26789:16;26786:36;;;26818:1;26815;26808:12;26786:36;;26841:74;26907:7;26896:8;26885:9;26881:24;26841:74;:::i;:::-;26831:84;;;26307:614;;;;;:::o;26926:368::-;27169:6;27158:9;27151:25;27212:2;27207;27196:9;27192:18;27185:30;27132:4;27232:56;27284:2;27273:9;27269:18;27261:6;27232:56;:::i;27511:287::-;27640:3;27678:6;27672:13;27694:66;27753:6;27748:3;27741:4;27733:6;27729:17;27694:66;:::i;:::-;27776:16;;;;;27511:287;-1:-1:-1;;27511:287:106:o;29604:184::-;29656:77;29653:1;29646:88;29753:4;29750:1;29743:15;29777:4;29774:1;29767:15;29793:288;29968:6;29957:9;29950:25;30011:2;30006;29995:9;29991:18;29984:30;29931:4;30031:44;30071:2;30060:9;30056:18;30048:6;30031:44;:::i;30086:184::-;30156:6;30209:2;30197:9;30188:7;30184:23;30180:32;30177:52;;;30225:1;30222;30215:12;30177:52;-1:-1:-1;30248:16:106;;30086:184;-1:-1:-1;30086:184:106:o;30577:219::-;30726:2;30715:9;30708:21;30689:4;30746:44;30786:2;30775:9;30771:18;30763:6;30746:44;:::i;30801:277::-;30868:6;30921:2;30909:9;30900:7;30896:23;30892:32;30889:52;;;30937:1;30934;30927:12;30889:52;30969:9;30963:16;31022:5;31015:13;31008:21;31001:5;30998:32;30988:60;;31044:1;31041;31034:12",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "flow((address,address,address),uint256[],(address,uint256[],bytes)[])": "f83d765a",
    "initialize((address,bytes,uint256[])[])": "204368cc",
    "initialize(bytes)": "439fab91",
    "multicall(bytes[])": "ac9650d8",
    "onERC1155BatchReceived(address,address,uint256[],uint256[],bytes)": "bc197c81",
    "onERC1155Received(address,address,uint256,uint256,bytes)": "f23a6e61",
    "onERC721Received(address,address,uint256,bytes)": "150b7a02",
    "stackToFlow(uint256[])": "43b84e53",
    "supportsInterface(bytes4)": "01ffc9a7"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"flowMinOutputs\",\"type\":\"uint256\"}],\"name\":\"BadMinStackLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InitializeSignatureFn\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InsufficientFlowOutputs\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"i\",\"type\":\"uint256\"}],\"name\":\"InvalidSignature\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"Sentinel\",\"name\":\"sentinel\",\"type\":\"uint256\"}],\"name\":\"MissingSentinel\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"unregisteredHash\",\"type\":\"bytes32\"}],\"name\":\"UnregisteredFlow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedERC1155Flow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedERC20Flow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedERC721Flow\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UnsupportedFlowInputs\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[][]\",\"name\":\"context\",\"type\":\"uint256[][]\"}],\"name\":\"Context\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IInterpreterV2\",\"name\":\"interpreter\",\"type\":\"address\"},{\"internalType\":\"contract IInterpreterStoreV2\",\"name\":\"store\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expression\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct EvaluableV2\",\"name\":\"evaluable\",\"type\":\"tuple\"}],\"name\":\"FlowInitialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IExpressionDeployerV3\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"constants\",\"type\":\"uint256[]\"}],\"indexed\":false,\"internalType\":\"struct EvaluableConfigV3[]\",\"name\":\"config\",\"type\":\"tuple[]\"}],\"name\":\"Initialize\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IInterpreterV2\",\"name\":\"interpreter\",\"type\":\"address\"},{\"internalType\":\"contract IInterpreterStoreV2\",\"name\":\"store\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"expression\",\"type\":\"address\"}],\"internalType\":\"struct EvaluableV2\",\"name\":\"evaluable\",\"type\":\"tuple\"},{\"internalType\":\"uint256[]\",\"name\":\"callerContext\",\"type\":\"uint256[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"context\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"internalType\":\"struct SignedContextV1[]\",\"name\":\"signedContexts\",\"type\":\"tuple[]\"}],\"name\":\"flow\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20Transfer[]\",\"name\":\"erc20\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC721Transfer[]\",\"name\":\"erc721\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC1155Transfer[]\",\"name\":\"erc1155\",\"type\":\"tuple[]\"}],\"internalType\":\"struct FlowTransferV1\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IExpressionDeployerV3\",\"name\":\"deployer\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"bytecode\",\"type\":\"bytes\"},{\"internalType\":\"uint256[]\",\"name\":\"constants\",\"type\":\"uint256[]\"}],\"internalType\":\"struct EvaluableConfigV3[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"initialize\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"data\",\"type\":\"bytes[]\"}],\"name\":\"multicall\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"results\",\"type\":\"bytes[]\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155BatchReceived\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC1155Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"onERC721Received\",\"outputs\":[{\"internalType\":\"bytes4\",\"name\":\"\",\"type\":\"bytes4\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"stack\",\"type\":\"uint256[]\"}],\"name\":\"stackToFlow\",\"outputs\":[{\"components\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC20Transfer[]\",\"name\":\"erc20\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC721Transfer[]\",\"name\":\"erc721\",\"type\":\"tuple[]\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"internalType\":\"struct ERC1155Transfer[]\",\"name\":\"erc1155\",\"type\":\"tuple[]\"}],\"internalType\":\"struct FlowTransferV1\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"BadMinStackLength(uint256)\":[{\"params\":{\"flowMinOutputs\":\"The min outputs for the flow.\"}}],\"MissingSentinel(uint256)\":[{\"params\":{\"sentinel\":\"The sentinel that was not found.\"}}],\"UnregisteredFlow(bytes32)\":[{\"params\":{\"unregisteredHash\":\"Hash of the unregistered flow.\"}}]},\"events\":{\"Context(address,uint256[][])\":{\"params\":{\"context\":\"The context that was built.\",\"sender\":\"`msg.sender` building the context.\"}},\"FlowInitialized(address,(address,address,address))\":{\"params\":{\"evaluable\":\"The evaluable of the flow that was registered. The hash of this evaluable is used as the key in `registeredFlows` so users MUST provide the same evaluable when they evaluate the flow.\",\"sender\":\"The address that registered the flow.\"}},\"Initialize(address,(address,bytes,uint256[])[])\":{\"params\":{\"config\":\"The list of evaluable configs that define the flows.\",\"sender\":\"The EOA that deployed the flow contract.\"}},\"Initialized(uint8)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"flow((address,address,address),uint256[],(address,uint256[],bytes)[])\":{\"params\":{\"callerContext\":\"The caller context to pass to the evaluable.\",\"evaluable\":\"The evaluable to evaluate.\",\"signedContexts\":\"The signed contexts to pass to the evaluable.\"},\"returns\":{\"_0\":\"The resulting flow transfer.\"}},\"initialize(bytes)\":{\"details\":\"The `ICloneableV2` interface is identical to `ICloneableV1` except that it returns a `bytes32` success hash.\",\"params\":{\"data\":\"The initialization data.\"},\"returns\":{\"_0\":\"keccak256(\\\"ICloneableV2.initialize\\\") if successful.\"}},\"multicall(bytes[])\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Receives and executes a batch of function calls on this contract.\"},\"onERC721Received(address,address,uint256,bytes)\":{\"details\":\"See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`.\"},\"stackToFlow(uint256[])\":{\"params\":{\"stack\":\"The stack of values to convert to a flow transfer.\"},\"returns\":{\"_0\":\"The resulting flow transfer.\"}},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"title\":\"Flow See `IFlowV5` docs.\",\"version\":1},\"userdoc\":{\"errors\":{\"BadMinStackLength(uint256)\":[{\"notice\":\"Thrown when the min outputs for a flow is fewer than the sentinels. This is always an implementation bug as the min outputs and sentinel count should both be compile time constants.\"}],\"InitializeSignatureFn()\":[{\"notice\":\"Overloaded initialize function MUST revert with this error.\"}],\"InvalidSignature(uint256)\":[{\"notice\":\"Thrown when the ith signature from a list of signed contexts is invalid.\"}],\"MissingSentinel(uint256)\":[{\"notice\":\"Thrown when the sentinel cannot be found. This can be because the sentinel was not in stack, but also if the upper pointer is below the lower, or the sentinel is in the stack but not aligned with the tuples size.\"}],\"UnregisteredFlow(bytes32)\":[{\"notice\":\"Thrown when the flow being evaluated is unregistered.\"}],\"UnsupportedERC1155Flow()\":[{\"notice\":\"Thrown for unsupported erc1155 transfers.\"}],\"UnsupportedERC20Flow()\":[{\"notice\":\"Thrown for unsupported erc20 transfers.\"}],\"UnsupportedERC721Flow()\":[{\"notice\":\"Thrown for unsupported erc721 transfers.\"}]},\"events\":{\"Context(address,uint256[][])\":{\"notice\":\"Calling contracts SHOULD emit `Context` before calling `eval` if they are able. Notably `eval` MAY be called within a static call which means that events cannot be emitted, in which case this does not apply. It MAY NOT be useful to emit this multiple times for several eval calls if they all share a common context, in which case a single emit is sufficient.\"},\"FlowInitialized(address,(address,address,address))\":{\"notice\":\"This event is emitted when a flow is registered at initialization.\"},\"Initialize(address,(address,bytes,uint256[])[])\":{\"notice\":\"MUST be emitted when the flow contract is initialized.\"}},\"kind\":\"user\",\"methods\":{\"flow((address,address,address),uint256[],(address,uint256[],bytes)[])\":{\"notice\":\"Given an evaluable, caller context, and signed contexts, evaluate the evaluable and return the resulting flow transfer. MUST process the flow transfer atomically, either all of it succeeds or none of it succeeds. MUST revert if the evaluable is not registered with the flow contract. MUST revert if the evaluable reverts. MUST revert if the evaluable returns a stack that is malformed. MUST revert if the evaluable returns a stack that contains a token transfer that is not allowed by the flow contract (e.g. if a token is being moved from an address that is not the caller or the flow contract).\"},\"initialize((address,bytes,uint256[])[])\":{\"notice\":\"Overloaded typed initialize function MUST revert with this error. As per `ICloneableV2` interface.\"},\"initialize(bytes)\":{\"notice\":\"Initialize is intended to work like constructors but for cloneable proxies. The `ICloneableV2` contract MUST ensure that initialize can NOT be called more than once. The `ICloneableV2` contract is designed to be deployed by an `ICloneableFactoryV2` but MUST NOT assume that it will be. It is possible for someone to directly deploy an `ICloneableV2` and fail to call initialize before other functions are called, and end users MAY NOT realise or know how to confirm a safe deployment state. The `ICloneableV2` MUST take appropriate measures to ensure that functions called before initialize are safe to do so, or revert. To be fully generic, `initilize` accepts `bytes` and so MUST ABI decode within the initialize function. This allows a single factory to service arbitrary cloneable proxies but also erases the type of the initialization config from the ABI. As tooling will inevitably require the ABI to be known, it is RECOMMENDED that the `ICloneableV2` contract implements a typed `initialize` function that overloads the generic `initialize(bytes)` function. This overloaded function MUST revert with `InitializeSignatureFn` always, so that it is NEVER accidentally called. This avoids complex and expensive delegate call style patterns where a typed overload has to call back to itself and preserve the sender, instead we force the caller to know the correct signature and call the correct function directly with encoded bytes. If initialization is successful the `ICloneableV2` MUST return the keccak256 hash of the string \\\"ICloneableV2.initialize\\\". This avoids false positives where a contract building a proxy, such as an `ICloneableFactoryV2`, may incorrectly believe that the clone has been initialized but the implementation doesn't support `ICloneableV2`.\"},\"stackToFlow(uint256[])\":{\"notice\":\"Given a stack of values, convert it to a flow transfer. MUST NOT modify state but MAY revert if the stack is malformed. The intended workflow is that the interpreter contract is called to produce a stack then the stack is converted to a flow transfer struct, to allow the caller to preview a flow before actually executing it. By accepting a stack as input, the caller can preview any possible flow, not just ones that have been registered with the flow contract, and can preview flows that may not even be possible to execute due to the state of the tokens, or access gating that would exclude the caller, etc.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/concrete/basic/Flow.sol\":\"Flow\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"appendCBOR\":false,\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":1000000},\"remappings\":[\":bytecode/=lib/rain.interpreter.interface/src/lib/bytecode/\",\":caller/=lib/rain.interpreter.interface/src/lib/caller/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":ns/=lib/rain.interpreter.interface/src/lib/ns/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/rain.math.fixedpoint/lib/openzeppelin-contracts/\",\":openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":rain.extrospection/=lib/rain.factory/lib/rain.extrospection/\",\":rain.factory/=lib/rain.factory/\",\":rain.interpreter.interface/=lib/rain.interpreter.interface/src/\",\":rain.lib.hash/=lib/rain.interpreter.interface/lib/rain.lib.hash/src/\",\":rain.lib.typecast/=lib/rain.interpreter.interface/lib/rain.lib.typecast/src/\",\":rain.math.fixedpoint/=lib/rain.math.fixedpoint/src/\",\":rain.math.saturating/=lib/rain.math.fixedpoint/lib/rain.math.saturating/src/\",\":rain.solmem/=lib/rain.solmem/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e\",\"dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025\",\"dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4a4da6e241d1d8c2ef214c311e02c749f45b5e0dd8168c667bc8ee6f67dcf4ce\",\"dweb:/ipfs/QmdsKj5frsNS7ZCfJBm4XNfy6MueV9udBF2FiBxVXwxybG\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155HolderUpgradeable.sol\":{\"keccak256\":\"0xa8a1f16aa62b4d8c9e380057d9c3ee5c992e4a10dccc5650b26e38d4c61287d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://50e44f018c6406333f6abf21f4f0bc1fbaef31b388bc3bd337cd6e6d099829bb\",\"dweb:/ipfs/QmeV9HNfHH7P9cdQ3ZgqAVYZHPyEqVCFRiaJdqiGinSAsX\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol\":{\"keccak256\":\"0xa1b77d6d0f4591359c42b747a31375f20b0571b5e1fb62652d8184fb10f1d63a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2046c535b9a580e22b404b014ed5a3cf272abb178e9997b3e67717b55fbd9c0a\",\"dweb:/ipfs/QmYiV76MTduunY4brmqrJgkiBcMxHxsRnzCZWBMvXoVQuY\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol\":{\"keccak256\":\"0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a\",\"dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol\":{\"keccak256\":\"0x09c808831c1411497f1a19fe3c43c1ac9ae1cd6729e32722f25765d820413e08\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a28722bb21e7e1984c583cfb19d176abfbc97b780f2d05d9ad80e02bfc09c99d\",\"dweb:/ipfs/QmVoHKqQEmxWM5CAtsP3QTYNqWMkShAhwas5d1eZfyh5Fv\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b\",\"dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol\":{\"keccak256\":\"0x9793fff31f1864ea9835c37b305e6f1dd0585c20df215a0d43b8ac13d180127a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a365dc603c1a9e86327830cceaa13b70a785a1c65a4e466e3e323949f813449d\",\"dweb:/ipfs/Qmb1wfsbzhFMLVSHhs7VQEicA992DMjoS2U1W7kCnpCatx\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7\",\"dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"lib/rain.factory/src/interface/ICloneableV2.sol\":{\"keccak256\":\"0xbc1ceff073c177b6a0765abc20e897074b45cf620e6196a1d1c52f935d217a80\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://fd2bbdded11b1d41ee37c03e617b17d12dbdd8a2afebc17a91f463db296cb234\",\"dweb:/ipfs/QmWTtnexF9X6G12nEWPcmcsDVTuaYHmWKwUgJTvcak8pYP\"]},\"lib/rain.interpreter.interface/lib/rain.lib.hash/src/LibHashNoAlloc.sol\":{\"keccak256\":\"0x52c8b6906d61bcc7e70d594cb097f53e361569904e27019ebeed0b4c94d2aed8\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://62999b0afefbe97e1d41c2c57b67a186e5a1618758f8f9cf17776c1d67f27d24\",\"dweb:/ipfs/QmfVsV2CVp91F9dHNWziKvSo54Wgb84k5Ct7Rtxxyptw35\"]},\"lib/rain.interpreter.interface/src/interface/IInterpreterCallerV2.sol\":{\"keccak256\":\"0x22631b43d4018c4e680481d049136ca46044a9d6fe786b1ed248fc6fe8336968\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://96381711b8f485a4de5a6e92715f1c3bbb5177536cc8a5a44f7bf07adff5d4d5\",\"dweb:/ipfs/QmQ1SPgdkMdmS6zfDhUstERfntxhaKJP9gVx9aFQa6EsEk\"]},\"lib/rain.interpreter.interface/src/interface/IInterpreterStoreV1.sol\":{\"keccak256\":\"0x8fe347844f029b84087daae66742fb10aa9e44f94ac90af696318188aa922c19\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://5eea5d2116f643db3ede89fd2dc3a5d293e35aec1d62a9daf6531f88a9656fb3\",\"dweb:/ipfs/Qmdys5MsEjgpXokb5FhMg96SYB6Bmf3frtVRvX74WrbKTc\"]},\"lib/rain.interpreter.interface/src/interface/deprecated/IExpressionDeployerV1.sol\":{\"keccak256\":\"0x5e903fdb445cc16e63bb86d53eeb49172e2472cd7344a762c6d85684aec8251d\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://5dab81bd2f092f392afbb295525c3602246ab5620de7630e84dab37b955f7e4d\",\"dweb:/ipfs/QmaGiCBSf2KjwjpVtJwG4k6iGqPKYs8dq6gkUYo9EFWkTg\"]},\"lib/rain.interpreter.interface/src/interface/deprecated/IExpressionDeployerV2.sol\":{\"keccak256\":\"0xc98ea86cd5d633d01b4136258bc0026b3d4bade652f831b482867e97df0e5365\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://d412df06ddccb1be19f6e962872297395546c591ccd42ccad91559aa0e5ee214\",\"dweb:/ipfs/QmebpvwxNtv9XNoKi9y8Ldqhzy3GWY5kwoSNDQL2vJHrbg\"]},\"lib/rain.interpreter.interface/src/interface/deprecated/IInterpreterCallerV1.sol\":{\"keccak256\":\"0xdfccb8ca0e4673ac476d1ccfcd1ffa69300f910c41352cc51c3408a58bf095b2\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://9a44b64873ed13c9c7d964e1d3b66dc2e80bb457563def325551bf796db8791c\",\"dweb:/ipfs/QmWTfH9qtwki5DFRAri1ouV7NVZ1mQzraz9eRumNEbcSNU\"]},\"lib/rain.interpreter.interface/src/interface/deprecated/IInterpreterV1.sol\":{\"keccak256\":\"0xb58d3b75312da70f4fb7896dc07d8a3d77de0638d169db4acf6c246ddab0f518\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://970029663ca4321640ca0d577213e938046a3fe2995b580f9f7c8f0bfa34a3f3\",\"dweb:/ipfs/QmeZgH1RKqLgDh56FWQATBy8BCt6CyGiCuamrKY22QyCRz\"]},\"lib/rain.interpreter.interface/src/interface/unstable/IExpressionDeployerV3.sol\":{\"keccak256\":\"0xc0cfba39db04ddd5f5d8eef6216ac8829c31651546617a793aae99370525cee7\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://1bc894cf9d8148f0b2bbd23cc4f40e659cdfa42bcef61526c3337ef553a56468\",\"dweb:/ipfs/QmY8DoyyFrELDMYMu31JgnGRAJcvjtVuUFtS1UqxpzT6Wr\"]},\"lib/rain.interpreter.interface/src/interface/unstable/IInterpreterStoreV2.sol\":{\"keccak256\":\"0xb4369c438f876657e2f6022c43ec068370cc274edde2df71046f781cd1772489\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://ad044848e6d7fa545ead8ad8fa8eb5f823c2aeb56e0b6cd49c3c26b8fcabdeb5\",\"dweb:/ipfs/QmQCopP3JpP4542nPwPdQ8CSusxPhhsYzj46QipTgsqX9o\"]},\"lib/rain.interpreter.interface/src/interface/unstable/IInterpreterV2.sol\":{\"keccak256\":\"0x445cc155e3651599c0e1aba6c61210e9b371ce8fae158ce2825c3c5d6e3f4125\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://26772d47c4a979413891eea358ede9120c52cf9ef77c862e75748dfbc3ae7a87\",\"dweb:/ipfs/QmNrkNy3jpF4tfe4nKUYqZuLCJwYd7hr1RkHvCUMMqofZE\"]},\"lib/rain.interpreter.interface/src/lib/caller/LibContext.sol\":{\"keccak256\":\"0x0d5a3c6050ce4de21c4ae0f402a2e292b80ec7cba39f6ab09dcbec025f352580\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://4ded91477be000f9522e049b7259812a09c32567e8389cb49c918bac5e5bb241\",\"dweb:/ipfs/QmewGk3NFeE52FCaGDgWDnpiSrqpz3PijopEx5DUu1Whdp\"]},\"lib/rain.interpreter.interface/src/lib/caller/LibEncodedDispatch.sol\":{\"keccak256\":\"0x4f011d07a8fa4b24efccb02022bff68730d53c852424817a4ca3cfc134bbc455\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://fd0ffd2bdc5e2af1f2f67938d70e2ae694a0285a4fae4818530aa86edce400b1\",\"dweb:/ipfs/QmQAcoLvHatMANZpm5aP1vCaVm3xp1tF5MnZjQiX7AfiRe\"]},\"lib/rain.interpreter.interface/src/lib/caller/LibEvaluable.sol\":{\"keccak256\":\"0xf1bd2114ca53e29514d14943b513e1886fabb2edd52f640105a6ce15f1071ac5\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://f1b40bedceaebc42f6317c2f61bbe821db28adef87c4a9ff741ddc5c3befe919\",\"dweb:/ipfs/QmXvcRoggh2jnhBCSyhPKgA2Xo45rqESTLvKzNAQysoAqC\"]},\"lib/rain.interpreter.interface/src/lib/ns/LibNamespace.sol\":{\"keccak256\":\"0x29574214b0e499343ea999d676764a18618485dece1cedc732ab73e779302153\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://4de0c0b4d297bbe286bf2e6ec8ba38ef3ea93811826d910c00381df86e54661f\",\"dweb:/ipfs/QmdJv5EgqtuRo2iTdChUE5hjhJgtBhBzztYqPUXevU6J5y\"]},\"lib/rain.math.fixedpoint/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/rain.math.fixedpoint/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol\":{\"keccak256\":\"0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0\",\"dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un\"]},\"lib/rain.math.fixedpoint/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/rain.math.fixedpoint/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/rain.math.fixedpoint/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6\",\"dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds\"]},\"lib/rain.math.fixedpoint/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol\":{\"keccak256\":\"0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56\",\"dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3\"]},\"lib/rain.math.fixedpoint/lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269\",\"dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj\"]},\"lib/rain.math.fixedpoint/lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634\",\"dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb\"]},\"lib/rain.math.fixedpoint/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb\",\"dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx\"]},\"lib/rain.math.fixedpoint/lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0xbc8d1f66b26e211a1f6f40a17453e9d5020ec96749014379205cff100809884c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b9c056a3068bb6fe41b28239bd71acd3a5249d23ed089c874182a4e3d7e47df1\",\"dweb:/ipfs/QmdFFG7dxiZ5jBaaYDXPMiKVG9rNoMhvR7cBt5997E2pat\"]},\"lib/rain.math.fixedpoint/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/rain.math.fixedpoint/lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b\",\"dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz\"]},\"lib/rain.solmem/src/lib/LibMemCpy.sol\":{\"keccak256\":\"0x6a2df10cc8f19bf99711c06ddf744080d922104b2f8aab4093ca1df8849a8406\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://58cdb4a850867b5ae325c28cd588a98e9c0b313fb7b70974fcb9ad357f552102\",\"dweb:/ipfs/QmYvf96iHnS81aqt9sEcdvqpq6ghsk2fa8RVNBc6pttQJe\"]},\"lib/rain.solmem/src/lib/LibPointer.sol\":{\"keccak256\":\"0xcd833cbf588ec10836cdfbddd426fc14dfa145ed2e63054f6bbd06e296e698f7\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://9ce0af4045e276c5e4c352c1c435f4ecea7552192b1d99e33732c1067bea0ad7\",\"dweb:/ipfs/Qmc5NCFTwgg2AemUz9K1fPei51ivge3eUrWP8k56kF8ADG\"]},\"lib/rain.solmem/src/lib/LibStackSentinel.sol\":{\"keccak256\":\"0x83898b6e7654905b8ce81d9dfdd5e5c42a789bce1ad373b3bbe8727fc09481f3\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://dff9df3ecc75b94ed248ec0ab744a9827af45e744ddd543a7db2fe3a9b377906\",\"dweb:/ipfs/Qmdd6bziBgAfPrydKEeTr2vV73Kto1EsC2jEjCTBvKNPmR\"]},\"lib/rain.solmem/src/lib/LibUint256Array.sol\":{\"keccak256\":\"0x120ff38e1ce110465281d3d27d63c7c8d7ecbeba65aeacbffa7bec393501cbde\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://0acaffcfb7a060e2cc60940768ac2c8c25c142834336de35984d1c53eba6f7b6\",\"dweb:/ipfs/QmcFAtiTDm43ZQTqAmpJUYuCbbTg6U6ytziB37qWU5h7sL\"]},\"lib/rain.solmem/src/lib/LibUint256Matrix.sol\":{\"keccak256\":\"0xb8ef091b3d1b8194535a4c76bb9143dcf6b2a1b9639a05465d91c64389cd86bd\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://2dc626acacdd7f88e0dbdca2bcd629a8da470168366ca420a2b11c7238b9418c\",\"dweb:/ipfs/QmQuP1bASxXEYEMWM5KBqAbHpnbemWEvL8XXJRfMftGv89\"]},\"src/abstract/FlowCommon.sol\":{\"keccak256\":\"0x0eaa1d2ff31dfc868beeaa9c7649dbd406d3394b011fa8a97b838ce4570329b2\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://6c177932466d5771c242ebefd15866993a685d775a4366bf1a279469cea1bb0f\",\"dweb:/ipfs/QmRXRVHxCojkXvcHC1QHuGg7sgRfyovcJn4pdaRHULXgF7\"]},\"src/concrete/basic/Flow.sol\":{\"keccak256\":\"0xfe04f28df452c5c50b917a8702af96706641ef1cce706afd1324ab06c2c2d849\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://14fe6e654d878a46f4b38f1dae7f2c24d46f57f2e2221e1a6375271dabb456b9\",\"dweb:/ipfs/QmbTR1UHGbiYw5KSke2K8RZic5WvtjMqA4VXLPQiQKFo2q\"]},\"src/error/ErrFlow.sol\":{\"keccak256\":\"0x1a73c85270b41177db2ecc3c2f1ac0069e9d9540de8121f428320dd27fe53bb0\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://84cee109a3675616bc8b193e512c01c71de9a61e38e861582728d74f8975e7cb\",\"dweb:/ipfs/QmTxNcaUWNnvVRWj3jteJ6sMWWKfadhPvpTaQcqv3EwVDN\"]},\"src/interface/deprecated/v3/IFlowV3.sol\":{\"keccak256\":\"0xb5c3b660f0faf5e1e41d9e6dae81db23e34b8f48b952480164b3ffb8bf383096\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://f2206fe3324392de58f3773829c0e8d1918e7d2c423bf5c815da6896d2d1a54f\",\"dweb:/ipfs/QmSpujqk24wrUxSvJgmUhxd7T4kE9tAfze4sVo8ZP1CGP4\"]},\"src/interface/deprecated/v4/IFlowV4.sol\":{\"keccak256\":\"0x29a1e88b399db28e56c62c105717995be4a6a6ab569bec7326b31fba5b896ca0\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://d1056284919d677af11b680f8e6f61c36a90ddad22aba13f8c7664de6ca6f083\",\"dweb:/ipfs/QmRfMp17AUYzLWvHEpBDsfU37LSCH6yvEvuiatWoKyG7g1\"]},\"src/interface/unstable/IFlowV5.sol\":{\"keccak256\":\"0xb213c5ac49e0a6b736384f5c5431afd4a583d766f68368bd28ee47c11853d7f4\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://cf0fb61842961f084ba32c8fe10725c8bb16103116c44810ba4ab21efa3abebc\",\"dweb:/ipfs/QmSqizaoyHFQrNvi6jZKEftWSnj23egFWgxgyCBFMCX1YE\"]},\"src/lib/LibFlow.sol\":{\"keccak256\":\"0xc70a99e0910575ff33fa4e0669256ecc63cae9f4dcabf171a15fb40ae6554386\",\"license\":\"CAL\",\"urls\":[\"bzz-raw://2e0e0c435082e79ecec797f8c19bf277bbd0dc82cc7a3c5957df45c8dfa5f101\",\"dweb:/ipfs/QmY5VWJdvixM6tANratn1rL2e237diDD14ntpHg8udmiUb\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "flowMinOutputs",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "BadMinStackLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InitializeSignatureFn"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "InsufficientFlowOutputs"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "i",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "InvalidSignature"
        },
        {
          "inputs": [
            {
              "internalType": "Sentinel",
              "name": "sentinel",
              "type": "uint256"
            }
          ],
          "type": "error",
          "name": "MissingSentinel"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "unregisteredHash",
              "type": "bytes32"
            }
          ],
          "type": "error",
          "name": "UnregisteredFlow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnsupportedERC1155Flow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnsupportedERC20Flow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnsupportedERC721Flow"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UnsupportedFlowInputs"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256[][]",
              "name": "context",
              "type": "uint256[][]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Context",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct EvaluableV2",
              "name": "evaluable",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IInterpreterV2",
                  "name": "interpreter",
                  "type": "address"
                },
                {
                  "internalType": "contract IInterpreterStoreV2",
                  "name": "store",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "expression",
                  "type": "address"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "FlowInitialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "struct EvaluableConfigV3[]",
              "name": "config",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "contract IExpressionDeployerV3",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "bytecode",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256[]",
                  "name": "constants",
                  "type": "uint256[]"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialize",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "struct EvaluableV2",
              "name": "evaluable",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IInterpreterV2",
                  "name": "interpreter",
                  "type": "address"
                },
                {
                  "internalType": "contract IInterpreterStoreV2",
                  "name": "store",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "expression",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "uint256[]",
              "name": "callerContext",
              "type": "uint256[]"
            },
            {
              "internalType": "struct SignedContextV1[]",
              "name": "signedContexts",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "signer",
                  "type": "address"
                },
                {
                  "internalType": "uint256[]",
                  "name": "context",
                  "type": "uint256[]"
                },
                {
                  "internalType": "bytes",
                  "name": "signature",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "flow",
          "outputs": [
            {
              "internalType": "struct FlowTransferV1",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct ERC20Transfer[]",
                  "name": "erc20",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct ERC721Transfer[]",
                  "name": "erc721",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct ERC1155Transfer[]",
                  "name": "erc1155",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct EvaluableConfigV3[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "contract IExpressionDeployerV3",
                  "name": "deployer",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "bytecode",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256[]",
                  "name": "constants",
                  "type": "uint256[]"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "data",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "multicall",
          "outputs": [
            {
              "internalType": "bytes[]",
              "name": "results",
              "type": "bytes[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC1155BatchReceived",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC1155Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onERC721Received",
          "outputs": [
            {
              "internalType": "bytes4",
              "name": "",
              "type": "bytes4"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "stack",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "stackToFlow",
          "outputs": [
            {
              "internalType": "struct FlowTransferV1",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "struct ERC20Transfer[]",
                  "name": "erc20",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct ERC721Transfer[]",
                  "name": "erc721",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    }
                  ]
                },
                {
                  "internalType": "struct ERC1155Transfer[]",
                  "name": "erc1155",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "token",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "from",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "to",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "id",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "flow((address,address,address),uint256[],(address,uint256[],bytes)[])": {
            "params": {
              "callerContext": "The caller context to pass to the evaluable.",
              "evaluable": "The evaluable to evaluate.",
              "signedContexts": "The signed contexts to pass to the evaluable."
            },
            "returns": {
              "_0": "The resulting flow transfer."
            }
          },
          "initialize(bytes)": {
            "details": "The `ICloneableV2` interface is identical to `ICloneableV1` except that it returns a `bytes32` success hash.",
            "params": {
              "data": "The initialization data."
            },
            "returns": {
              "_0": "keccak256(\"ICloneableV2.initialize\") if successful."
            }
          },
          "multicall(bytes[])": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Receives and executes a batch of function calls on this contract."
          },
          "onERC721Received(address,address,uint256,bytes)": {
            "details": "See {IERC721Receiver-onERC721Received}. Always returns `IERC721Receiver.onERC721Received.selector`."
          },
          "stackToFlow(uint256[])": {
            "params": {
              "stack": "The stack of values to convert to a flow transfer."
            },
            "returns": {
              "_0": "The resulting flow transfer."
            }
          },
          "supportsInterface(bytes4)": {
            "details": "See {IERC165-supportsInterface}."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "flow((address,address,address),uint256[],(address,uint256[],bytes)[])": {
            "notice": "Given an evaluable, caller context, and signed contexts, evaluate the evaluable and return the resulting flow transfer. MUST process the flow transfer atomically, either all of it succeeds or none of it succeeds. MUST revert if the evaluable is not registered with the flow contract. MUST revert if the evaluable reverts. MUST revert if the evaluable returns a stack that is malformed. MUST revert if the evaluable returns a stack that contains a token transfer that is not allowed by the flow contract (e.g. if a token is being moved from an address that is not the caller or the flow contract)."
          },
          "initialize((address,bytes,uint256[])[])": {
            "notice": "Overloaded typed initialize function MUST revert with this error. As per `ICloneableV2` interface."
          },
          "initialize(bytes)": {
            "notice": "Initialize is intended to work like constructors but for cloneable proxies. The `ICloneableV2` contract MUST ensure that initialize can NOT be called more than once. The `ICloneableV2` contract is designed to be deployed by an `ICloneableFactoryV2` but MUST NOT assume that it will be. It is possible for someone to directly deploy an `ICloneableV2` and fail to call initialize before other functions are called, and end users MAY NOT realise or know how to confirm a safe deployment state. The `ICloneableV2` MUST take appropriate measures to ensure that functions called before initialize are safe to do so, or revert. To be fully generic, `initilize` accepts `bytes` and so MUST ABI decode within the initialize function. This allows a single factory to service arbitrary cloneable proxies but also erases the type of the initialization config from the ABI. As tooling will inevitably require the ABI to be known, it is RECOMMENDED that the `ICloneableV2` contract implements a typed `initialize` function that overloads the generic `initialize(bytes)` function. This overloaded function MUST revert with `InitializeSignatureFn` always, so that it is NEVER accidentally called. This avoids complex and expensive delegate call style patterns where a typed overload has to call back to itself and preserve the sender, instead we force the caller to know the correct signature and call the correct function directly with encoded bytes. If initialization is successful the `ICloneableV2` MUST return the keccak256 hash of the string \"ICloneableV2.initialize\". This avoids false positives where a contract building a proxy, such as an `ICloneableFactoryV2`, may incorrectly believe that the clone has been initialized but the implementation doesn't support `ICloneableV2`."
          },
          "stackToFlow(uint256[])": {
            "notice": "Given a stack of values, convert it to a flow transfer. MUST NOT modify state but MAY revert if the stack is malformed. The intended workflow is that the interpreter contract is called to produce a stack then the stack is converted to a flow transfer struct, to allow the caller to preview a flow before actually executing it. By accepting a stack as input, the caller can preview any possible flow, not just ones that have been registered with the flow contract, and can preview flows that may not even be possible to execute due to the state of the tokens, or access gating that would exclude the caller, etc."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "bytecode/=lib/rain.interpreter.interface/src/lib/bytecode/",
        "caller/=lib/rain.interpreter.interface/src/lib/caller/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "ns/=lib/rain.interpreter.interface/src/lib/ns/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/rain.math.fixedpoint/lib/openzeppelin-contracts/",
        "openzeppelin/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "rain.extrospection/=lib/rain.factory/lib/rain.extrospection/",
        "rain.factory/=lib/rain.factory/",
        "rain.interpreter.interface/=lib/rain.interpreter.interface/src/",
        "rain.lib.hash/=lib/rain.interpreter.interface/lib/rain.lib.hash/src/",
        "rain.lib.typecast/=lib/rain.interpreter.interface/lib/rain.lib.typecast/src/",
        "rain.math.fixedpoint/=lib/rain.math.fixedpoint/src/",
        "rain.math.saturating/=lib/rain.math.fixedpoint/lib/rain.math.saturating/src/",
        "rain.solmem/=lib/rain.solmem/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 1000000
      },
      "metadata": {
        "bytecodeHash": "none",
        "appendCBOR": false
      },
      "compilationTarget": {
        "src/concrete/basic/Flow.sol": "Flow"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x89be10e757d242e9b18d5a32c9fbe2019f6d63052bbe46397a430a1d60d7f794",
        "urls": [
          "bzz-raw://f103ee2e4aecd37aac6ceefe670709cdd7613dee25fa2d4d9feaf7fc0aaa155e",
          "dweb:/ipfs/QmRiNZLoJk5k3HPMYGPGjZFd2ke1ZxjhJZkM45Ec9GH9hv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0xb82ef33f43b6b96109687d91b39c94573fdccaaa423fe28e8ba0977b31c023e0",
        "urls": [
          "bzz-raw://ec9c629f63e66379f9c868a74f971064701cc6e30583872aa653f8b932518025",
          "dweb:/ipfs/QmY4MnZF2VMFwJkAwpdQwxEWA3KcGbNBKEmAVYePMVQWUR"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/IERC1155ReceiverUpgradeable.sol": {
        "keccak256": "0xffcb29612efb57efc8f0d4897deb5abaeac830022c59a3aa17446d698dbc856b",
        "urls": [
          "bzz-raw://4a4da6e241d1d8c2ef214c311e02c749f45b5e0dd8168c667bc8ee6f67dcf4ce",
          "dweb:/ipfs/QmdsKj5frsNS7ZCfJBm4XNfy6MueV9udBF2FiBxVXwxybG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155HolderUpgradeable.sol": {
        "keccak256": "0xa8a1f16aa62b4d8c9e380057d9c3ee5c992e4a10dccc5650b26e38d4c61287d4",
        "urls": [
          "bzz-raw://50e44f018c6406333f6abf21f4f0bc1fbaef31b388bc3bd337cd6e6d099829bb",
          "dweb:/ipfs/QmeV9HNfHH7P9cdQ3ZgqAVYZHPyEqVCFRiaJdqiGinSAsX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC1155/utils/ERC1155ReceiverUpgradeable.sol": {
        "keccak256": "0xa1b77d6d0f4591359c42b747a31375f20b0571b5e1fb62652d8184fb10f1d63a",
        "urls": [
          "bzz-raw://2046c535b9a580e22b404b014ed5a3cf272abb178e9997b3e67717b55fbd9c0a",
          "dweb:/ipfs/QmYiV76MTduunY4brmqrJgkiBcMxHxsRnzCZWBMvXoVQuY"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/IERC721ReceiverUpgradeable.sol": {
        "keccak256": "0xbb2ed8106d94aeae6858e2551a1e7174df73994b77b13ebd120ccaaef80155f5",
        "urls": [
          "bzz-raw://8bc3c6a456dba727d8dd9fd33420febede490abb49a07469f61d2a3ace66a95a",
          "dweb:/ipfs/QmVAWtEVj7K5AbvgJa9Dz22KiDq9eoptCjnVZqsTMtKXyd"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/token/ERC721/utils/ERC721HolderUpgradeable.sol": {
        "keccak256": "0x09c808831c1411497f1a19fe3c43c1ac9ae1cd6729e32722f25765d820413e08",
        "urls": [
          "bzz-raw://a28722bb21e7e1984c583cfb19d176abfbc97b780f2d05d9ad80e02bfc09c99d",
          "dweb:/ipfs/QmVoHKqQEmxWM5CAtsP3QTYNqWMkShAhwas5d1eZfyh5Fv"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x9c80f545915582e63fe206c6ce27cbe85a86fc10b9cd2a0e8c9488fb7c2ee422",
        "urls": [
          "bzz-raw://310136ad60820af4177a11a61d77a3686faf5fca4942b600e08fc940db38396b",
          "dweb:/ipfs/QmbCzMNSTL7Zi7M4UCSqBrkHtp4jjxUnGbkneCZKdR1qeq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/MulticallUpgradeable.sol": {
        "keccak256": "0x9793fff31f1864ea9835c37b305e6f1dd0585c20df215a0d43b8ac13d180127a",
        "urls": [
          "bzz-raw://a365dc603c1a9e86327830cceaa13b70a785a1c65a4e466e3e323949f813449d",
          "dweb:/ipfs/Qmb1wfsbzhFMLVSHhs7VQEicA992DMjoS2U1W7kCnpCatx"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/ERC165Upgradeable.sol": {
        "keccak256": "0x9a3b990bd56d139df3e454a9edf1c64668530b5a77fc32eb063bc206f958274a",
        "urls": [
          "bzz-raw://0895399d170daab2d69b4c43a0202e5a07f2e67a93b26e3354dcbedb062232f7",
          "dweb:/ipfs/QmUM1VH3XDk559Dsgh4QPvupr3YVKjz87HrSyYzzVFZbxw"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/introspection/IERC165Upgradeable.sol": {
        "keccak256": "0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09",
        "urls": [
          "bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758",
          "dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy"
        ],
        "license": "MIT"
      },
      "lib/rain.factory/src/interface/ICloneableV2.sol": {
        "keccak256": "0xbc1ceff073c177b6a0765abc20e897074b45cf620e6196a1d1c52f935d217a80",
        "urls": [
          "bzz-raw://fd2bbdded11b1d41ee37c03e617b17d12dbdd8a2afebc17a91f463db296cb234",
          "dweb:/ipfs/QmWTtnexF9X6G12nEWPcmcsDVTuaYHmWKwUgJTvcak8pYP"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter.interface/lib/rain.lib.hash/src/LibHashNoAlloc.sol": {
        "keccak256": "0x52c8b6906d61bcc7e70d594cb097f53e361569904e27019ebeed0b4c94d2aed8",
        "urls": [
          "bzz-raw://62999b0afefbe97e1d41c2c57b67a186e5a1618758f8f9cf17776c1d67f27d24",
          "dweb:/ipfs/QmfVsV2CVp91F9dHNWziKvSo54Wgb84k5Ct7Rtxxyptw35"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter.interface/src/interface/IInterpreterCallerV2.sol": {
        "keccak256": "0x22631b43d4018c4e680481d049136ca46044a9d6fe786b1ed248fc6fe8336968",
        "urls": [
          "bzz-raw://96381711b8f485a4de5a6e92715f1c3bbb5177536cc8a5a44f7bf07adff5d4d5",
          "dweb:/ipfs/QmQ1SPgdkMdmS6zfDhUstERfntxhaKJP9gVx9aFQa6EsEk"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter.interface/src/interface/IInterpreterStoreV1.sol": {
        "keccak256": "0x8fe347844f029b84087daae66742fb10aa9e44f94ac90af696318188aa922c19",
        "urls": [
          "bzz-raw://5eea5d2116f643db3ede89fd2dc3a5d293e35aec1d62a9daf6531f88a9656fb3",
          "dweb:/ipfs/Qmdys5MsEjgpXokb5FhMg96SYB6Bmf3frtVRvX74WrbKTc"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter.interface/src/interface/deprecated/IExpressionDeployerV1.sol": {
        "keccak256": "0x5e903fdb445cc16e63bb86d53eeb49172e2472cd7344a762c6d85684aec8251d",
        "urls": [
          "bzz-raw://5dab81bd2f092f392afbb295525c3602246ab5620de7630e84dab37b955f7e4d",
          "dweb:/ipfs/QmaGiCBSf2KjwjpVtJwG4k6iGqPKYs8dq6gkUYo9EFWkTg"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter.interface/src/interface/deprecated/IExpressionDeployerV2.sol": {
        "keccak256": "0xc98ea86cd5d633d01b4136258bc0026b3d4bade652f831b482867e97df0e5365",
        "urls": [
          "bzz-raw://d412df06ddccb1be19f6e962872297395546c591ccd42ccad91559aa0e5ee214",
          "dweb:/ipfs/QmebpvwxNtv9XNoKi9y8Ldqhzy3GWY5kwoSNDQL2vJHrbg"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter.interface/src/interface/deprecated/IInterpreterCallerV1.sol": {
        "keccak256": "0xdfccb8ca0e4673ac476d1ccfcd1ffa69300f910c41352cc51c3408a58bf095b2",
        "urls": [
          "bzz-raw://9a44b64873ed13c9c7d964e1d3b66dc2e80bb457563def325551bf796db8791c",
          "dweb:/ipfs/QmWTfH9qtwki5DFRAri1ouV7NVZ1mQzraz9eRumNEbcSNU"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter.interface/src/interface/deprecated/IInterpreterV1.sol": {
        "keccak256": "0xb58d3b75312da70f4fb7896dc07d8a3d77de0638d169db4acf6c246ddab0f518",
        "urls": [
          "bzz-raw://970029663ca4321640ca0d577213e938046a3fe2995b580f9f7c8f0bfa34a3f3",
          "dweb:/ipfs/QmeZgH1RKqLgDh56FWQATBy8BCt6CyGiCuamrKY22QyCRz"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter.interface/src/interface/unstable/IExpressionDeployerV3.sol": {
        "keccak256": "0xc0cfba39db04ddd5f5d8eef6216ac8829c31651546617a793aae99370525cee7",
        "urls": [
          "bzz-raw://1bc894cf9d8148f0b2bbd23cc4f40e659cdfa42bcef61526c3337ef553a56468",
          "dweb:/ipfs/QmY8DoyyFrELDMYMu31JgnGRAJcvjtVuUFtS1UqxpzT6Wr"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter.interface/src/interface/unstable/IInterpreterStoreV2.sol": {
        "keccak256": "0xb4369c438f876657e2f6022c43ec068370cc274edde2df71046f781cd1772489",
        "urls": [
          "bzz-raw://ad044848e6d7fa545ead8ad8fa8eb5f823c2aeb56e0b6cd49c3c26b8fcabdeb5",
          "dweb:/ipfs/QmQCopP3JpP4542nPwPdQ8CSusxPhhsYzj46QipTgsqX9o"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter.interface/src/interface/unstable/IInterpreterV2.sol": {
        "keccak256": "0x445cc155e3651599c0e1aba6c61210e9b371ce8fae158ce2825c3c5d6e3f4125",
        "urls": [
          "bzz-raw://26772d47c4a979413891eea358ede9120c52cf9ef77c862e75748dfbc3ae7a87",
          "dweb:/ipfs/QmNrkNy3jpF4tfe4nKUYqZuLCJwYd7hr1RkHvCUMMqofZE"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter.interface/src/lib/caller/LibContext.sol": {
        "keccak256": "0x0d5a3c6050ce4de21c4ae0f402a2e292b80ec7cba39f6ab09dcbec025f352580",
        "urls": [
          "bzz-raw://4ded91477be000f9522e049b7259812a09c32567e8389cb49c918bac5e5bb241",
          "dweb:/ipfs/QmewGk3NFeE52FCaGDgWDnpiSrqpz3PijopEx5DUu1Whdp"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter.interface/src/lib/caller/LibEncodedDispatch.sol": {
        "keccak256": "0x4f011d07a8fa4b24efccb02022bff68730d53c852424817a4ca3cfc134bbc455",
        "urls": [
          "bzz-raw://fd0ffd2bdc5e2af1f2f67938d70e2ae694a0285a4fae4818530aa86edce400b1",
          "dweb:/ipfs/QmQAcoLvHatMANZpm5aP1vCaVm3xp1tF5MnZjQiX7AfiRe"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter.interface/src/lib/caller/LibEvaluable.sol": {
        "keccak256": "0xf1bd2114ca53e29514d14943b513e1886fabb2edd52f640105a6ce15f1071ac5",
        "urls": [
          "bzz-raw://f1b40bedceaebc42f6317c2f61bbe821db28adef87c4a9ff741ddc5c3befe919",
          "dweb:/ipfs/QmXvcRoggh2jnhBCSyhPKgA2Xo45rqESTLvKzNAQysoAqC"
        ],
        "license": "CAL"
      },
      "lib/rain.interpreter.interface/src/lib/ns/LibNamespace.sol": {
        "keccak256": "0x29574214b0e499343ea999d676764a18618485dece1cedc732ab73e779302153",
        "urls": [
          "bzz-raw://4de0c0b4d297bbe286bf2e6ec8ba38ef3ea93811826d910c00381df86e54661f",
          "dweb:/ipfs/QmdJv5EgqtuRo2iTdChUE5hjhJgtBhBzztYqPUXevU6J5y"
        ],
        "license": "CAL"
      },
      "lib/rain.math.fixedpoint/lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
        "urls": [
          "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
          "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
        ],
        "license": "MIT"
      },
      "lib/rain.math.fixedpoint/lib/openzeppelin-contracts/contracts/token/ERC1155/IERC1155.sol": {
        "keccak256": "0x6392f2cfe3a5ee802227fe7a2dfd47096d881aec89bddd214b35c5b46d3cd941",
        "urls": [
          "bzz-raw://bd9c47a375639888e726a99da718890ba16d17d7ad9eacb0ccc892d46d1b3ee0",
          "dweb:/ipfs/Qmb41W5RUjy2sWg49A2rMnxekSeEk6SvGyJL5tyCCSr7un"
        ],
        "license": "MIT"
      },
      "lib/rain.math.fixedpoint/lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/rain.math.fixedpoint/lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/rain.math.fixedpoint/lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x9b72f93be69ca894d8492c244259615c4a742afc8d63720dbc8bb81087d9b238",
        "urls": [
          "bzz-raw://f5a7b96e511be78d5cdf635c784e6ab8cdd38625bb8cafb8a80914a1c89cf0f6",
          "dweb:/ipfs/QmVzTCwJxQAkjRQHboT5QrvsVJGWQHgfEjeTbvyxoKBrds"
        ],
        "license": "MIT"
      },
      "lib/rain.math.fixedpoint/lib/openzeppelin-contracts/contracts/token/ERC721/IERC721.sol": {
        "keccak256": "0xab28a56179c1db258c9bf5235b382698cb650debecb51b23d12be9e241374b68",
        "urls": [
          "bzz-raw://daae589a9d6fa7e55f99f86c0a16796ca490f243fb3693632c3711c0646c1d56",
          "dweb:/ipfs/QmR3zpd7wNw3rcUdekwiv6FYHJqksuTCXLVioTxu6Fbxk3"
        ],
        "license": "MIT"
      },
      "lib/rain.math.fixedpoint/lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xf96f969e24029d43d0df89e59d365f277021dac62b48e1c1e3ebe0acdd7f1ca1",
        "urls": [
          "bzz-raw://ec772b45a624be516f1c81970caa8a2e144301e9d0921cbc1a2789fef39a1269",
          "dweb:/ipfs/QmNyjwxCrGhQMyzLD93oUobJXVe9ceJvRvfXwbEtuxPiEj"
        ],
        "license": "MIT"
      },
      "lib/rain.math.fixedpoint/lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xa4d1d62251f8574deb032a35fc948386a9b4de74b812d4f545a1ac120486b48a",
        "urls": [
          "bzz-raw://8c969013129ba9e651a20735ef659fef6d8a1139ea3607bd4b26ddea2d645634",
          "dweb:/ipfs/QmVhVa6LGuzAcB8qgDtVHRkucn4ihj5UZr8xBLcJkP6ucb"
        ],
        "license": "MIT"
      },
      "lib/rain.math.fixedpoint/lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xda898fa084aa1ddfdb346e6a40459e00a59d87071cce7c315a46d648dd71d0ba",
        "urls": [
          "bzz-raw://ce501a941f4aa1555c04dabb5e07992503bb6a9b32ff8f7cdcefdb4a742210cb",
          "dweb:/ipfs/QmeScPrUpdrGYs9BytV3Z5ZWJcBXtuAgCW4BLHua4xFUxx"
        ],
        "license": "MIT"
      },
      "lib/rain.math.fixedpoint/lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol": {
        "keccak256": "0xbc8d1f66b26e211a1f6f40a17453e9d5020ec96749014379205cff100809884c",
        "urls": [
          "bzz-raw://b9c056a3068bb6fe41b28239bd71acd3a5249d23ed089c874182a4e3d7e47df1",
          "dweb:/ipfs/QmdFFG7dxiZ5jBaaYDXPMiKVG9rNoMhvR7cBt5997E2pat"
        ],
        "license": "MIT"
      },
      "lib/rain.math.fixedpoint/lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/rain.math.fixedpoint/lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xa1e8e83cd0087785df04ac79fb395d9f3684caeaf973d9e2c71caef723a3a5d6",
        "urls": [
          "bzz-raw://33bbf48cc069be677705037ba7520c22b1b622c23b33e1a71495f2d36549d40b",
          "dweb:/ipfs/Qmct36zWXv3j7LZB83uwbg7TXwnZSN1fqHNDZ93GG98bGz"
        ],
        "license": "MIT"
      },
      "lib/rain.solmem/src/lib/LibMemCpy.sol": {
        "keccak256": "0x6a2df10cc8f19bf99711c06ddf744080d922104b2f8aab4093ca1df8849a8406",
        "urls": [
          "bzz-raw://58cdb4a850867b5ae325c28cd588a98e9c0b313fb7b70974fcb9ad357f552102",
          "dweb:/ipfs/QmYvf96iHnS81aqt9sEcdvqpq6ghsk2fa8RVNBc6pttQJe"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibPointer.sol": {
        "keccak256": "0xcd833cbf588ec10836cdfbddd426fc14dfa145ed2e63054f6bbd06e296e698f7",
        "urls": [
          "bzz-raw://9ce0af4045e276c5e4c352c1c435f4ecea7552192b1d99e33732c1067bea0ad7",
          "dweb:/ipfs/Qmc5NCFTwgg2AemUz9K1fPei51ivge3eUrWP8k56kF8ADG"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibStackSentinel.sol": {
        "keccak256": "0x83898b6e7654905b8ce81d9dfdd5e5c42a789bce1ad373b3bbe8727fc09481f3",
        "urls": [
          "bzz-raw://dff9df3ecc75b94ed248ec0ab744a9827af45e744ddd543a7db2fe3a9b377906",
          "dweb:/ipfs/Qmdd6bziBgAfPrydKEeTr2vV73Kto1EsC2jEjCTBvKNPmR"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibUint256Array.sol": {
        "keccak256": "0x120ff38e1ce110465281d3d27d63c7c8d7ecbeba65aeacbffa7bec393501cbde",
        "urls": [
          "bzz-raw://0acaffcfb7a060e2cc60940768ac2c8c25c142834336de35984d1c53eba6f7b6",
          "dweb:/ipfs/QmcFAtiTDm43ZQTqAmpJUYuCbbTg6U6ytziB37qWU5h7sL"
        ],
        "license": "CAL"
      },
      "lib/rain.solmem/src/lib/LibUint256Matrix.sol": {
        "keccak256": "0xb8ef091b3d1b8194535a4c76bb9143dcf6b2a1b9639a05465d91c64389cd86bd",
        "urls": [
          "bzz-raw://2dc626acacdd7f88e0dbdca2bcd629a8da470168366ca420a2b11c7238b9418c",
          "dweb:/ipfs/QmQuP1bASxXEYEMWM5KBqAbHpnbemWEvL8XXJRfMftGv89"
        ],
        "license": "CAL"
      },
      "src/abstract/FlowCommon.sol": {
        "keccak256": "0x0eaa1d2ff31dfc868beeaa9c7649dbd406d3394b011fa8a97b838ce4570329b2",
        "urls": [
          "bzz-raw://6c177932466d5771c242ebefd15866993a685d775a4366bf1a279469cea1bb0f",
          "dweb:/ipfs/QmRXRVHxCojkXvcHC1QHuGg7sgRfyovcJn4pdaRHULXgF7"
        ],
        "license": "CAL"
      },
      "src/concrete/basic/Flow.sol": {
        "keccak256": "0xfe04f28df452c5c50b917a8702af96706641ef1cce706afd1324ab06c2c2d849",
        "urls": [
          "bzz-raw://14fe6e654d878a46f4b38f1dae7f2c24d46f57f2e2221e1a6375271dabb456b9",
          "dweb:/ipfs/QmbTR1UHGbiYw5KSke2K8RZic5WvtjMqA4VXLPQiQKFo2q"
        ],
        "license": "CAL"
      },
      "src/error/ErrFlow.sol": {
        "keccak256": "0x1a73c85270b41177db2ecc3c2f1ac0069e9d9540de8121f428320dd27fe53bb0",
        "urls": [
          "bzz-raw://84cee109a3675616bc8b193e512c01c71de9a61e38e861582728d74f8975e7cb",
          "dweb:/ipfs/QmTxNcaUWNnvVRWj3jteJ6sMWWKfadhPvpTaQcqv3EwVDN"
        ],
        "license": "CAL"
      },
      "src/interface/deprecated/v3/IFlowV3.sol": {
        "keccak256": "0xb5c3b660f0faf5e1e41d9e6dae81db23e34b8f48b952480164b3ffb8bf383096",
        "urls": [
          "bzz-raw://f2206fe3324392de58f3773829c0e8d1918e7d2c423bf5c815da6896d2d1a54f",
          "dweb:/ipfs/QmSpujqk24wrUxSvJgmUhxd7T4kE9tAfze4sVo8ZP1CGP4"
        ],
        "license": "CAL"
      },
      "src/interface/deprecated/v4/IFlowV4.sol": {
        "keccak256": "0x29a1e88b399db28e56c62c105717995be4a6a6ab569bec7326b31fba5b896ca0",
        "urls": [
          "bzz-raw://d1056284919d677af11b680f8e6f61c36a90ddad22aba13f8c7664de6ca6f083",
          "dweb:/ipfs/QmRfMp17AUYzLWvHEpBDsfU37LSCH6yvEvuiatWoKyG7g1"
        ],
        "license": "CAL"
      },
      "src/interface/unstable/IFlowV5.sol": {
        "keccak256": "0xb213c5ac49e0a6b736384f5c5431afd4a583d766f68368bd28ee47c11853d7f4",
        "urls": [
          "bzz-raw://cf0fb61842961f084ba32c8fe10725c8bb16103116c44810ba4ab21efa3abebc",
          "dweb:/ipfs/QmSqizaoyHFQrNvi6jZKEftWSnj23egFWgxgyCBFMCX1YE"
        ],
        "license": "CAL"
      },
      "src/lib/LibFlow.sol": {
        "keccak256": "0xc70a99e0910575ff33fa4e0669256ecc63cae9f4dcabf171a15fb40ae6554386",
        "urls": [
          "bzz-raw://2e0e0c435082e79ecec797f8c19bf277bbd0dc82cc7a3c5957df45c8dfa5f101",
          "dweb:/ipfs/QmY5VWJdvixM6tANratn1rL2e237diDD14ntpHg8udmiUb"
        ],
        "license": "CAL"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/concrete/basic/Flow.sol",
    "id": 53777,
    "exportedSymbols": {
      "EvaluableConfigV3": [
        48826
      ],
      "EvaluableV2": [
        48835
      ],
      "Flow": [
        53776
      ],
      "FlowCommon": [
        53609
      ],
      "FlowTransferV1": [
        56952
      ],
      "ICLONEABLE_V2_SUCCESS": [
        48706
      ],
      "ICloneableV2": [
        48719
      ],
      "IFlowV5": [
        57552
      ],
      "LibContext": [
        50007
      ],
      "LibFlow": [
        57928
      ],
      "LibUint256Array": [
        53152
      ],
      "LibUint256Matrix": [
        53256
      ],
      "MIN_FLOW_SENTINELS": [
        56877
      ],
      "Pointer": [
        52748
      ],
      "SignedContextV1": [
        48843
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2296:78",
    "nodes": [
      {
        "id": 53611,
        "nodeType": "PragmaDirective",
        "src": "32:24:78",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 53614,
        "nodeType": "ImportDirective",
        "src": "58:96:78",
        "nodes": [],
        "absolutePath": "lib/rain.factory/src/interface/ICloneableV2.sol",
        "file": "rain.factory/src/interface/ICloneableV2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53777,
        "sourceUnit": 48720,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53612,
              "name": "ICloneableV2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48719,
              "src": "66:12:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 53613,
              "name": "ICLONEABLE_V2_SUCCESS",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48706,
              "src": "80:21:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53617,
        "nodeType": "ImportDirective",
        "src": "155:69:78",
        "nodes": [],
        "absolutePath": "src/abstract/FlowCommon.sol",
        "file": "../../abstract/FlowCommon.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53777,
        "sourceUnit": 53610,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53615,
              "name": "FlowCommon",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53609,
              "src": "163:10:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 53616,
              "name": "LibContext",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 50007,
              "src": "175:10:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53621,
        "nodeType": "ImportDirective",
        "src": "225:97:78",
        "nodes": [],
        "absolutePath": "src/interface/unstable/IFlowV5.sol",
        "file": "../../interface/unstable/IFlowV5.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53777,
        "sourceUnit": 57553,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53618,
              "name": "IFlowV5",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 57552,
              "src": "233:7:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 53619,
              "name": "MIN_FLOW_SENTINELS",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56877,
              "src": "242:18:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 53620,
              "name": "FlowTransferV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 56952,
              "src": "262:14:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53623,
        "nodeType": "ImportDirective",
        "src": "323:46:78",
        "nodes": [],
        "absolutePath": "src/lib/LibFlow.sol",
        "file": "../../lib/LibFlow.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53777,
        "sourceUnit": 57929,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53622,
              "name": "LibFlow",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 57928,
              "src": "331:7:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53625,
        "nodeType": "ImportDirective",
        "src": "370:70:78",
        "nodes": [],
        "absolutePath": "lib/rain.solmem/src/lib/LibUint256Matrix.sol",
        "file": "rain.solmem/lib/LibUint256Matrix.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53777,
        "sourceUnit": 53257,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53624,
              "name": "LibUint256Matrix",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53256,
              "src": "378:16:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53627,
        "nodeType": "ImportDirective",
        "src": "441:55:78",
        "nodes": [],
        "absolutePath": "lib/rain.solmem/src/lib/LibPointer.sol",
        "file": "rain.solmem/lib/LibPointer.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53777,
        "sourceUnit": 52869,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53626,
              "name": "Pointer",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52748,
              "src": "449:7:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53629,
        "nodeType": "ImportDirective",
        "src": "497:68:78",
        "nodes": [],
        "absolutePath": "lib/rain.solmem/src/lib/LibUint256Array.sol",
        "file": "rain.solmem/lib/LibUint256Array.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53777,
        "sourceUnit": 53153,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53628,
              "name": "LibUint256Array",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 53152,
              "src": "505:15:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53631,
        "nodeType": "ImportDirective",
        "src": "566:83:78",
        "nodes": [],
        "absolutePath": "lib/rain.interpreter.interface/src/lib/caller/LibEvaluable.sol",
        "file": "rain.interpreter.interface/lib/caller/LibEvaluable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53777,
        "sourceUnit": 50142,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53630,
              "name": "EvaluableV2",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48835,
              "src": "574:11:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53634,
        "nodeType": "ImportDirective",
        "src": "650:113:78",
        "nodes": [],
        "absolutePath": "lib/rain.interpreter.interface/src/interface/IInterpreterCallerV2.sol",
        "file": "rain.interpreter.interface/interface/IInterpreterCallerV2.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53777,
        "sourceUnit": 48864,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53632,
              "name": "SignedContextV1",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48843,
              "src": "658:15:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 53633,
              "name": "EvaluableConfigV3",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 48826,
              "src": "675:17:78",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53776,
        "nodeType": "ContractDefinition",
        "src": "805:1522:78",
        "nodes": [
          {
            "id": 53645,
            "nodeType": "UsingForDirective",
            "src": "862:37:78",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 53642,
              "name": "LibUint256Matrix",
              "nameLocations": [
                "868:16:78"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53256,
              "src": "868:16:78"
            },
            "typeName": {
              "baseType": {
                "id": 53643,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "889:7:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 53644,
              "nodeType": "ArrayTypeName",
              "src": "889:9:78",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            }
          },
          {
            "id": 53649,
            "nodeType": "UsingForDirective",
            "src": "904:36:78",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 53646,
              "name": "LibUint256Array",
              "nameLocations": [
                "910:15:78"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53152,
              "src": "910:15:78"
            },
            "typeName": {
              "baseType": {
                "id": 53647,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "930:7:78",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 53648,
              "nodeType": "ArrayTypeName",
              "src": "930:9:78",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            }
          },
          {
            "id": 53661,
            "nodeType": "FunctionDefinition",
            "src": "1061:109:78",
            "nodes": [],
            "body": {
              "id": 53660,
              "nodeType": "Block",
              "src": "1123:47:78",
              "nodes": [],
              "statements": [
                {
                  "errorCall": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 53657,
                      "name": "InitializeSignatureFn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 48710,
                      "src": "1140:21:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 53658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1140:23:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53659,
                  "nodeType": "RevertStatement",
                  "src": "1133:30:78"
                }
              ]
            },
            "documentation": {
              "id": 53650,
              "nodeType": "StructuredDocumentation",
              "src": "946:110:78",
              "text": "Overloaded typed initialize function MUST revert with this error.\n As per `ICloneableV2` interface."
            },
            "functionSelector": "204368cc",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "initialize",
            "nameLocation": "1070:10:78",
            "parameters": {
              "id": 53655,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53654,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53661,
                  "src": "1081:26:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_EvaluableConfigV3_$48826_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct EvaluableConfigV3[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 53652,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 53651,
                        "name": "EvaluableConfigV3",
                        "nameLocations": [
                          "1081:17:78"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 48826,
                        "src": "1081:17:78"
                      },
                      "referencedDeclaration": 48826,
                      "src": "1081:17:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_EvaluableConfigV3_$48826_storage_ptr",
                        "typeString": "struct EvaluableConfigV3"
                      }
                    },
                    "id": 53653,
                    "nodeType": "ArrayTypeName",
                    "src": "1081:19:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_EvaluableConfigV3_$48826_storage_$dyn_storage_ptr",
                      "typeString": "struct EvaluableConfigV3[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1080:28:78"
            },
            "returnParameters": {
              "id": 53656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1123:0:78"
            },
            "scope": 53776,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53698,
            "nodeType": "FunctionDefinition",
            "src": "1209:320:78",
            "nodes": [],
            "body": {
              "id": 53697,
              "nodeType": "Block",
              "src": "1289:240:78",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    53675
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53675,
                      "mutability": "mutable",
                      "name": "flowConfig",
                      "nameLocation": "1326:10:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 53697,
                      "src": "1299:37:78",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_EvaluableConfigV3_$48826_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct EvaluableConfigV3[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 53673,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 53672,
                            "name": "EvaluableConfigV3",
                            "nameLocations": [
                              "1299:17:78"
                            ],
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 48826,
                            "src": "1299:17:78"
                          },
                          "referencedDeclaration": 48826,
                          "src": "1299:17:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EvaluableConfigV3_$48826_storage_ptr",
                            "typeString": "struct EvaluableConfigV3"
                          }
                        },
                        "id": 53674,
                        "nodeType": "ArrayTypeName",
                        "src": "1299:19:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_EvaluableConfigV3_$48826_storage_$dyn_storage_ptr",
                          "typeString": "struct EvaluableConfigV3[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53683,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53678,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53664,
                        "src": "1350:4:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "components": [
                          {
                            "baseExpression": {
                              "id": 53679,
                              "name": "EvaluableConfigV3",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48826,
                              "src": "1357:17:78",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_EvaluableConfigV3_$48826_storage_ptr_$",
                                "typeString": "type(struct EvaluableConfigV3 storage pointer)"
                              }
                            },
                            "id": 53680,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1357:19:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_array$_t_struct$_EvaluableConfigV3_$48826_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "type(struct EvaluableConfigV3 memory[] memory)"
                            }
                          }
                        ],
                        "id": 53681,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "1356:21:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_array$_t_struct$_EvaluableConfigV3_$48826_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "type(struct EvaluableConfigV3 memory[] memory)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_type$_t_array$_t_struct$_EvaluableConfigV3_$48826_memory_ptr_$dyn_memory_ptr_$",
                          "typeString": "type(struct EvaluableConfigV3 memory[] memory)"
                        }
                      ],
                      "expression": {
                        "id": 53676,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "1339:3:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 53677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberLocation": "1343:6:78",
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "1339:10:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 53682,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1339:39:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_EvaluableConfigV3_$48826_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct EvaluableConfigV3 memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1299:79:78"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53685,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1404:3:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 53686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1408:6:78",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1404:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53687,
                        "name": "flowConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53675,
                        "src": "1416:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_EvaluableConfigV3_$48826_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct EvaluableConfigV3 memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_EvaluableConfigV3_$48826_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct EvaluableConfigV3 memory[] memory"
                        }
                      ],
                      "id": 53684,
                      "name": "Initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 57524,
                      "src": "1393:10:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_array$_t_struct$_EvaluableConfigV3_$48826_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,struct EvaluableConfigV3 memory[] memory)"
                      }
                    },
                    "id": 53688,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1393:34:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53689,
                  "nodeType": "EmitStatement",
                  "src": "1388:39:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53691,
                        "name": "flowConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53675,
                        "src": "1453:10:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_EvaluableConfigV3_$48826_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct EvaluableConfigV3 memory[] memory"
                        }
                      },
                      {
                        "id": 53692,
                        "name": "MIN_FLOW_SENTINELS",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 56877,
                        "src": "1465:18:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_EvaluableConfigV3_$48826_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct EvaluableConfigV3 memory[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53690,
                      "name": "flowCommonInit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53502,
                      "src": "1438:14:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_EvaluableConfigV3_$48826_memory_ptr_$dyn_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (struct EvaluableConfigV3 memory[] memory,uint256)"
                      }
                    },
                    "id": 53693,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1438:46:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53694,
                  "nodeType": "ExpressionStatement",
                  "src": "1438:46:78"
                },
                {
                  "expression": {
                    "id": 53695,
                    "name": "ICLONEABLE_V2_SUCCESS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 48706,
                    "src": "1501:21:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 53670,
                  "id": 53696,
                  "nodeType": "Return",
                  "src": "1494:28:78"
                }
              ]
            },
            "baseFunctions": [
              48718
            ],
            "documentation": {
              "id": 53662,
              "nodeType": "StructuredDocumentation",
              "src": "1176:28:78",
              "text": "@inheritdoc ICloneableV2"
            },
            "functionSelector": "439fab91",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 53667,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 53666,
                  "name": "initializer",
                  "nameLocations": [
                    "1259:11:78"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43390,
                  "src": "1259:11:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "1259:11:78"
              }
            ],
            "name": "initialize",
            "nameLocation": "1218:10:78",
            "parameters": {
              "id": 53665,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53664,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "1244:4:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 53698,
                  "src": "1229:19:78",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 53663,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1229:5:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1228:21:78"
            },
            "returnParameters": {
              "id": 53670,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53669,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53698,
                  "src": "1280:7:78",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 53668,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1280:7:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1279:9:78"
            },
            "scope": 53776,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53720,
            "nodeType": "FunctionDefinition",
            "src": "1563:192:78",
            "nodes": [],
            "body": {
              "id": 53719,
              "nodeType": "Block",
              "src": "1671:84:78",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 53711,
                            "name": "stack",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53702,
                            "src": "1708:5:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 53712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1714:11:78",
                          "memberName": "dataPointer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52963,
                          "src": "1708:17:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_userDefinedValueType$_Pointer_$52748_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[] memory) pure returns (Pointer)"
                          }
                        },
                        "id": 53713,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1708:19:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Pointer_$52748",
                          "typeString": "Pointer"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 53714,
                            "name": "stack",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53702,
                            "src": "1729:5:78",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[] memory"
                            }
                          },
                          "id": 53715,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1735:10:78",
                          "memberName": "endPointer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 52975,
                          "src": "1729:16:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_array$_t_uint256_$dyn_memory_ptr_$returns$_t_userDefinedValueType$_Pointer_$52748_$attached_to$_t_array$_t_uint256_$dyn_memory_ptr_$",
                            "typeString": "function (uint256[] memory) pure returns (Pointer)"
                          }
                        },
                        "id": 53716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1729:18:78",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Pointer_$52748",
                          "typeString": "Pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Pointer_$52748",
                          "typeString": "Pointer"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Pointer_$52748",
                          "typeString": "Pointer"
                        }
                      ],
                      "expression": {
                        "id": 53709,
                        "name": "LibFlow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57928,
                        "src": "1688:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibFlow_$57928_$",
                          "typeString": "type(library LibFlow)"
                        }
                      },
                      "id": 53710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1696:11:78",
                      "memberName": "stackToFlow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57674,
                      "src": "1688:19:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Pointer_$52748_$_t_userDefinedValueType$_Pointer_$52748_$returns$_t_struct$_FlowTransferV1_$56952_memory_ptr_$",
                        "typeString": "function (Pointer,Pointer) pure returns (struct FlowTransferV1 memory)"
                      }
                    },
                    "id": 53717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1688:60:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FlowTransferV1_$56952_memory_ptr",
                      "typeString": "struct FlowTransferV1 memory"
                    }
                  },
                  "functionReturnParameters": 53708,
                  "id": 53718,
                  "nodeType": "Return",
                  "src": "1681:67:78"
                }
              ]
            },
            "baseFunctions": [
              57534
            ],
            "documentation": {
              "id": 53699,
              "nodeType": "StructuredDocumentation",
              "src": "1535:23:78",
              "text": "@inheritdoc IFlowV5"
            },
            "functionSelector": "43b84e53",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stackToFlow",
            "nameLocation": "1572:11:78",
            "overrides": {
              "id": 53704,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1630:8:78"
            },
            "parameters": {
              "id": 53703,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53702,
                  "mutability": "mutable",
                  "name": "stack",
                  "nameLocation": "1601:5:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 53720,
                  "src": "1584:22:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 53700,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1584:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 53701,
                    "nodeType": "ArrayTypeName",
                    "src": "1584:9:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1583:24:78"
            },
            "returnParameters": {
              "id": 53708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53707,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53720,
                  "src": "1648:21:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FlowTransferV1_$56952_memory_ptr",
                    "typeString": "struct FlowTransferV1"
                  },
                  "typeName": {
                    "id": 53706,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53705,
                      "name": "FlowTransferV1",
                      "nameLocations": [
                        "1648:14:78"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 56952,
                      "src": "1648:14:78"
                    },
                    "referencedDeclaration": 56952,
                    "src": "1648:14:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FlowTransferV1_$56952_storage_ptr",
                      "typeString": "struct FlowTransferV1"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1647:23:78"
            },
            "scope": 53776,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 53775,
            "nodeType": "FunctionDefinition",
            "src": "1789:536:78",
            "nodes": [],
            "body": {
              "id": 53774,
              "nodeType": "Block",
              "src": "2004:321:78",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    53741,
                    53744,
                    53747
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53741,
                      "mutability": "mutable",
                      "name": "stackBottom",
                      "nameLocation": "2023:11:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 53774,
                      "src": "2015:19:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Pointer_$52748",
                        "typeString": "Pointer"
                      },
                      "typeName": {
                        "id": 53740,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53739,
                          "name": "Pointer",
                          "nameLocations": [
                            "2015:7:78"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 52748,
                          "src": "2015:7:78"
                        },
                        "referencedDeclaration": 52748,
                        "src": "2015:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Pointer_$52748",
                          "typeString": "Pointer"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 53744,
                      "mutability": "mutable",
                      "name": "stackTop",
                      "nameLocation": "2044:8:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 53774,
                      "src": "2036:16:78",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_userDefinedValueType$_Pointer_$52748",
                        "typeString": "Pointer"
                      },
                      "typeName": {
                        "id": 53743,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53742,
                          "name": "Pointer",
                          "nameLocations": [
                            "2036:7:78"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 52748,
                          "src": "2036:7:78"
                        },
                        "referencedDeclaration": 52748,
                        "src": "2036:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Pointer_$52748",
                          "typeString": "Pointer"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 53747,
                      "mutability": "mutable",
                      "name": "kvs",
                      "nameLocation": "2071:3:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 53774,
                      "src": "2054:20:78",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 53745,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2054:7:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 53746,
                        "nodeType": "ArrayTypeName",
                        "src": "2054:9:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53753,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53749,
                        "name": "evaluable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53724,
                        "src": "2101:9:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_EvaluableV2_$48835_memory_ptr",
                          "typeString": "struct EvaluableV2 memory"
                        }
                      },
                      {
                        "id": 53750,
                        "name": "callerContext",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53727,
                        "src": "2112:13:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 53751,
                        "name": "signedContexts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53731,
                        "src": "2127:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$48843_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct SignedContextV1 memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_EvaluableV2_$48835_memory_ptr",
                          "typeString": "struct EvaluableV2 memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$48843_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct SignedContextV1 memory[] memory"
                        }
                      ],
                      "id": 53748,
                      "name": "_flowStack",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53608,
                      "src": "2090:10:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_EvaluableV2_$48835_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$_t_array$_t_struct$_SignedContextV1_$48843_memory_ptr_$dyn_memory_ptr_$returns$_t_userDefinedValueType$_Pointer_$52748_$_t_userDefinedValueType$_Pointer_$52748_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (struct EvaluableV2 memory,uint256[] memory,struct SignedContextV1 memory[] memory) returns (Pointer,Pointer,uint256[] memory)"
                      }
                    },
                    "id": 53752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2090:52:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_userDefinedValueType$_Pointer_$52748_$_t_userDefinedValueType$_Pointer_$52748_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(Pointer,Pointer,uint256[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2014:128:78"
                },
                {
                  "assignments": [
                    53756
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53756,
                      "mutability": "mutable",
                      "name": "flowTransfer",
                      "nameLocation": "2174:12:78",
                      "nodeType": "VariableDeclaration",
                      "scope": 53774,
                      "src": "2152:34:78",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FlowTransferV1_$56952_memory_ptr",
                        "typeString": "struct FlowTransferV1"
                      },
                      "typeName": {
                        "id": 53755,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53754,
                          "name": "FlowTransferV1",
                          "nameLocations": [
                            "2152:14:78"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 56952,
                          "src": "2152:14:78"
                        },
                        "referencedDeclaration": 56952,
                        "src": "2152:14:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FlowTransferV1_$56952_storage_ptr",
                          "typeString": "struct FlowTransferV1"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53762,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53759,
                        "name": "stackBottom",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53741,
                        "src": "2209:11:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Pointer_$52748",
                          "typeString": "Pointer"
                        }
                      },
                      {
                        "id": 53760,
                        "name": "stackTop",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53744,
                        "src": "2222:8:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_userDefinedValueType$_Pointer_$52748",
                          "typeString": "Pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Pointer_$52748",
                          "typeString": "Pointer"
                        },
                        {
                          "typeIdentifier": "t_userDefinedValueType$_Pointer_$52748",
                          "typeString": "Pointer"
                        }
                      ],
                      "expression": {
                        "id": 53757,
                        "name": "LibFlow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57928,
                        "src": "2189:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibFlow_$57928_$",
                          "typeString": "type(library LibFlow)"
                        }
                      },
                      "id": 53758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2197:11:78",
                      "memberName": "stackToFlow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57674,
                      "src": "2189:19:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_userDefinedValueType$_Pointer_$52748_$_t_userDefinedValueType$_Pointer_$52748_$returns$_t_struct$_FlowTransferV1_$56952_memory_ptr_$",
                        "typeString": "function (Pointer,Pointer) pure returns (struct FlowTransferV1 memory)"
                      }
                    },
                    "id": 53761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2189:42:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FlowTransferV1_$56952_memory_ptr",
                      "typeString": "struct FlowTransferV1 memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2152:79:78"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53766,
                        "name": "flowTransfer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53756,
                        "src": "2254:12:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FlowTransferV1_$56952_memory_ptr",
                          "typeString": "struct FlowTransferV1 memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 53767,
                          "name": "evaluable",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53724,
                          "src": "2268:9:78",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_EvaluableV2_$48835_memory_ptr",
                            "typeString": "struct EvaluableV2 memory"
                          }
                        },
                        "id": 53768,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2278:5:78",
                        "memberName": "store",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 48832,
                        "src": "2268:15:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IInterpreterStoreV2_$49214",
                          "typeString": "contract IInterpreterStoreV2"
                        }
                      },
                      {
                        "id": 53769,
                        "name": "kvs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53747,
                        "src": "2285:3:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_FlowTransferV1_$56952_memory_ptr",
                          "typeString": "struct FlowTransferV1 memory"
                        },
                        {
                          "typeIdentifier": "t_contract$_IInterpreterStoreV2_$49214",
                          "typeString": "contract IInterpreterStoreV2"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 53763,
                        "name": "LibFlow",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 57928,
                        "src": "2241:7:78",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_LibFlow_$57928_$",
                          "typeString": "type(library LibFlow)"
                        }
                      },
                      "id": 53765,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2249:4:78",
                      "memberName": "flow",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 57927,
                      "src": "2241:12:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_FlowTransferV1_$56952_memory_ptr_$_t_contract$_IInterpreterStoreV2_$49214_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct FlowTransferV1 memory,contract IInterpreterStoreV2,uint256[] memory)"
                      }
                    },
                    "id": 53770,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2241:48:78",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53771,
                  "nodeType": "ExpressionStatement",
                  "src": "2241:48:78"
                },
                {
                  "expression": {
                    "id": 53772,
                    "name": "flowTransfer",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 53756,
                    "src": "2306:12:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FlowTransferV1_$56952_memory_ptr",
                      "typeString": "struct FlowTransferV1 memory"
                    }
                  },
                  "functionReturnParameters": 53738,
                  "id": 53773,
                  "nodeType": "Return",
                  "src": "2299:19:78"
                }
              ]
            },
            "baseFunctions": [
              57551
            ],
            "documentation": {
              "id": 53721,
              "nodeType": "StructuredDocumentation",
              "src": "1761:23:78",
              "text": "@inheritdoc IFlowV5"
            },
            "functionSelector": "f83d765a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 53734,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 53733,
                  "name": "nonReentrant",
                  "nameLocations": [
                    "1947:12:78"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43532,
                  "src": "1947:12:78"
                },
                "nodeType": "ModifierInvocation",
                "src": "1947:12:78"
              }
            ],
            "name": "flow",
            "nameLocation": "1798:4:78",
            "parameters": {
              "id": 53732,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53724,
                  "mutability": "mutable",
                  "name": "evaluable",
                  "nameLocation": "1822:9:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 53775,
                  "src": "1803:28:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_EvaluableV2_$48835_memory_ptr",
                    "typeString": "struct EvaluableV2"
                  },
                  "typeName": {
                    "id": 53723,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53722,
                      "name": "EvaluableV2",
                      "nameLocations": [
                        "1803:11:78"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 48835,
                      "src": "1803:11:78"
                    },
                    "referencedDeclaration": 48835,
                    "src": "1803:11:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_EvaluableV2_$48835_storage_ptr",
                      "typeString": "struct EvaluableV2"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53727,
                  "mutability": "mutable",
                  "name": "callerContext",
                  "nameLocation": "1850:13:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 53775,
                  "src": "1833:30:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 53725,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1833:7:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 53726,
                    "nodeType": "ArrayTypeName",
                    "src": "1833:9:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53731,
                  "mutability": "mutable",
                  "name": "signedContexts",
                  "nameLocation": "1890:14:78",
                  "nodeType": "VariableDeclaration",
                  "scope": 53775,
                  "src": "1865:39:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$48843_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct SignedContextV1[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 53729,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 53728,
                        "name": "SignedContextV1",
                        "nameLocations": [
                          "1865:15:78"
                        ],
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 48843,
                        "src": "1865:15:78"
                      },
                      "referencedDeclaration": 48843,
                      "src": "1865:15:78",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SignedContextV1_$48843_storage_ptr",
                        "typeString": "struct SignedContextV1"
                      }
                    },
                    "id": 53730,
                    "nodeType": "ArrayTypeName",
                    "src": "1865:17:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_SignedContextV1_$48843_storage_$dyn_storage_ptr",
                      "typeString": "struct SignedContextV1[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1802:103:78"
            },
            "returnParameters": {
              "id": 53738,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53737,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53775,
                  "src": "1977:21:78",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_FlowTransferV1_$56952_memory_ptr",
                    "typeString": "struct FlowTransferV1"
                  },
                  "typeName": {
                    "id": 53736,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53735,
                      "name": "FlowTransferV1",
                      "nameLocations": [
                        "1977:14:78"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 56952,
                      "src": "1977:14:78"
                    },
                    "referencedDeclaration": 56952,
                    "src": "1977:14:78",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FlowTransferV1_$56952_storage_ptr",
                      "typeString": "struct FlowTransferV1"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1976:23:78"
            },
            "scope": 53776,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 53636,
              "name": "ICloneableV2",
              "nameLocations": [
                "822:12:78"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 48719,
              "src": "822:12:78"
            },
            "id": 53637,
            "nodeType": "InheritanceSpecifier",
            "src": "822:12:78"
          },
          {
            "baseName": {
              "id": 53638,
              "name": "IFlowV5",
              "nameLocations": [
                "836:7:78"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57552,
              "src": "836:7:78"
            },
            "id": 53639,
            "nodeType": "InheritanceSpecifier",
            "src": "836:7:78"
          },
          {
            "baseName": {
              "id": 53640,
              "name": "FlowCommon",
              "nameLocations": [
                "845:10:78"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53609,
              "src": "845:10:78"
            },
            "id": 53641,
            "nodeType": "InheritanceSpecifier",
            "src": "845:10:78"
          }
        ],
        "canonicalName": "Flow",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 53635,
          "nodeType": "StructuredDocumentation",
          "src": "765:40:78",
          "text": "@title Flow\n See `IFlowV5` docs."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          53776,
          53609,
          48863,
          43572,
          47442,
          45066,
          45120,
          44858,
          47715,
          47727,
          46995,
          46805,
          43488,
          57552,
          48719
        ],
        "name": "Flow",
        "nameLocation": "814:4:78",
        "scope": 53777,
        "usedErrors": [
          48710,
          49710,
          52877,
          53303,
          55779,
          55785,
          55788,
          55791,
          55805,
          55807
        ]
      }
    ],
    "license": "CAL"
  },
  "id": 78
}